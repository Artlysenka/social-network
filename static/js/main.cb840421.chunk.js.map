{"version":3,"sources":["components/Common/Preloader/Preloader.module.css","redux/profileReducer.js","assets/defaultAvatar.png","hoc/LoggedInRedirect.js","redux/dialogsReducer.js","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Users/Users.module.css","API/api.js","redux/authReducer.js","components/Navbar/Nav.module.css","components/Common/FormControls/Login.module.css","reportWebVitals.js","redux/friendsReducer.js","redux/usersReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Navbar/Nav.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","assets/networkLogo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Users/Paginator/PageButton.jsx","components/Users/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersInnerContainer.jsx","components/Common/FormControls/TextError.jsx","components/Common/FormControls/FormikCheckbox.jsx","components/Common/FormControls/FormikDatePicker.jsx","components/Common/FormControls/FormikInput.jsx","components/Common/FormControls/FormikRadioButtons.jsx","components/Common/FormControls/FormikSelect.jsx","components/Common/FormControls/FormikTextArea.jsx","components/Common/FormControls/FormikControl.jsx","components/Login/LoginForm.jsx","hoc/WithSuspense.js","App.js","index.js","components/Users/User/User.module.css","redux/selectors.js","assets/loaderSVG.svg","components/Common/Preloader/Preloader.jsx","components/Users/Paginator/PageButton.module.css","components/Header/Header.module.css"],"names":["module","exports","SET_USER_PROFILE","APDATE_USER_STATUS","ADD_NEW_POST","UPDATE_POST_TEXT","DELETE_POST","initialState","posts","newPostText","profile","userStatus","setUserProfile","type","updateUserStatusAC","addNewPostAC","postText","login","getUserProfileThunkCreator","UserId","dispatch","a","getUserProfile","res","data","removeUserProfileThunkCreator","getUserStatusThunkCreator","getUserStatus","updateUserStatusThunkCreator","status","sendUserStatus","resultCode","addNewPostThunkCreator","profileReducer","state","action","newPost","id","userAva","userName","likesCount","filter","post","postId","LoggedInRedirect","Component","RedirectedComponent","props","this","isLoggedIn","confirmation","to","isFetching","React","connect","authReducer","LoggedInTogglegAC","LoggedInFetchingAC","logOut","POST_NEW_TEXT","dialogsData","messagesData","dialogsReducer","newDialog","name","newPostItem","message","postNewTextActionCreator","instance","axios","create","withCredentials","baseURL","headers","getUsers","pageSize","pageCount","get","then","userId","put","follow","unFollow","delete","logInProfile","loginMe","email","password","rememberMe","logOutMe","getCaptcha","SET_USER_DATA","LOGGED_IN_TOGGLE","LOGGED_IN_FETCHING","CAPTCHA","captchaImg","setUserDataAC","logInUserThunkCreator","getCaptchaThunk","url","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friends","friendsReducer","stateCopy","FOLLOW","UNFOLLOW","SET_USERS","PAGE_SIZE","TOGGLE_PRELOADER","TOGGLE_FOLLOWING_PROGRESS","PAGE_COUNT","TOTAL_COUNT","users","totalCount","followingProgress","followAC","unfollowAC","setUsersAC","pageCountAC","toggleFollowingProgressAC","INITIALIZED_SUCCSESS","initialized","reducers","combineReducers","usersReducer","map","user","followed","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Nav","className","classes","nav","item","activeClassName","active","Music","contentColor","Settings","Header","header","logo","alt","src","onClick","HeaderContainer","PageButton","switchPage","removeUsers","button","checkedButton","Paginator","useState","initialPage","setInitialPage","numberOfShowedButtons","decrementNumber","setDecrementNumber","incrementNumber","numberOfPageButtons","Math","ceil","buttons","buttonsInitializeArray","i","push","createButtonsArray","buttonsContainer","User","photo","unFollowThunkCreator","followThunkCreator","logoBlock","defaultAvatar","disabled","some","infoBlock","country","city","Users","photos","small","UsersInnerContainer","getUsersThunkCreator","removeUsersThunkCreator","length","addPageSize","pageSizeAC","setUsers","addUsers","Preloader","getUsersSuper","usersSelectors","getPageSize","getPageCount","getTotalCount","getIsFetching","getFollowingProgrress","items","TextError","error","children","FormikCheckbox","options","label","rest","field","option","Fragment","value","checked","includes","htmlFor","key","component","FormikDatePicker","formControl","form","setFieldValue","selected","onChange","val","Input","FormikInput","touchedEmail","touchedPassword","alert","FormikRadioButtons","FormikSelect","as","FormikTextArea","FormikControl","control","radioOptions","initialValues","validationSchema","Yup","required","onSubmit","values","formik","touched","isValid","WithSuspense","Suspense","fallback","Dialogs","lazy","ProfileContainer","App","initializeApp","path","render","exact","AppWithRouter","withRouter","promise","Promise","all","MainApp","basename","process","rerenderEntireTree","ReactDOM","document","getElementById","getAllUsers","getAllUsersSelector","createSelector","postsSelectors","getPosts","getProfile","getNewPostsText","getLogin","preloaderContainer","preloader"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,UAAY,+B,gSCCnFC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAe,eACfC,EAAmB,mBACnBC,EAAc,cAEhBC,EAAe,CACfC,MAAO,GACPC,YAAa,GACbC,QAAS,KACTC,WAAY,MA+CHC,EAAiB,SAACF,GAAD,MAAc,CAAEG,KAAMX,EAAkBQ,YAEzDI,EAAqB,SAACH,GAAD,MAAiB,CAAEE,KAAMV,EAAoBQ,WAAYA,IAE9EI,EAAe,SAACC,EAAUC,GAAX,MAAsB,CAAEJ,KAAMT,EAAcY,WAAUC,UAOrEC,EAA6B,SAACC,GAAD,8CACtC,WAAOC,GAAP,eAAAC,EAAA,sEACsBC,YAAeH,GADrC,OACUI,EADV,OAEIH,EAASR,EAAeW,EAAIC,OAFhC,2CADsC,uDAO7BC,EAAgC,WACzC,OAAO,SAACL,GACJA,EAASR,EAAe,SAInBc,EAA4B,SAACP,GAAD,8CACrC,WAAOC,GAAP,eAAAC,EAAA,sEACsBM,YAAcR,GADpC,OACUI,EADV,OAEIH,EAASN,EAAmBS,EAAIC,OAFpC,2CADqC,uDAO5BI,EAA+B,SAACC,GAAD,8CACxC,WAAOT,GAAP,SAAAC,EAAA,sEACqBS,YAAeD,GADpC,OAEoC,IAFpC,OAEgBL,KAAKO,YACTX,EAASN,EAAmBe,IAHxC,2CADwC,uDAS/BG,EAAyB,SAAChB,EAAUC,GAAX,OAAqB,SAACG,GACxDA,EAASL,EAAaC,EAAUC,MAGrBgB,IAxFQ,WAAmC,IAAlCC,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAErD,OAAQA,EAAOtB,MACX,KAAKX,EACD,OAAO,2BAAKgC,GAAZ,IAAmBxB,QAASyB,EAAOzB,UAEvC,KAAKP,EACD,OAAO,2BACA+B,GADP,IAEIvB,WAAYwB,EAAOxB,aAG3B,KAAKN,EACD,OAAO,2BACA6B,GADP,IAEIzB,YAAa0B,EAAOnB,WAG5B,KAAKZ,EACD,IAAIgC,EAAU,CACVC,GAAI,EACJrB,SAAUmB,EAAOnB,SACjBsB,QAAS,KACTC,SAAUJ,EAAOlB,MACjBuB,WAAY,GAEhB,OAAO,2BACAN,GADP,IAEI1B,MAAM,GAAD,mBAAM0B,EAAM1B,OAAZ,CAAmB4B,MAGhC,KAAK9B,EACD,OAAO,2BACA4B,GADP,IAEI1B,MAAO0B,EAAM1B,MAAMiC,QAAO,SAAAC,GAAI,OAAIA,EAAKL,IAAMF,EAAOQ,YAG5D,QACI,OAAOT,K,iCCrDJ,QAA0B,2C,2JCK5BU,EAAmB,SAACC,GAAe,IACtCC,EADqC,kDAGvC,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAQA,EAFE,EAHoB,qDASnC,OACI,sCACGC,KAAKD,MAAME,YAAcD,KAAKD,MAAMG,aAAe,cAAC,IAAD,CAAUC,GAAG,WAAc,6BAC/EH,KAAKD,MAAMK,aAAeJ,KAAKD,MAAME,WAAa,6BAAQ,cAACJ,EAAD,eAAeG,KAAKD,eAZjD,GACTM,IAAMR,WAuBxC,OAD6BS,aALS,SAACpB,GAAD,MAAY,CAC9Ce,WAAYf,EAAMqB,YAAYN,WAC9BG,WAAYlB,EAAMqB,YAAYH,WAC9BF,aAAchB,EAAMqB,YAAYL,gBAEkC,CAACM,sBAAmBC,uBAAoBC,YAAjFJ,CAA0FR,K,wHC5BrHa,EAAgB,gBAElBpD,EAAe,CACfqD,YAAa,GACbC,aAAc,IAGLC,EAAiB,WAAmC,IAAlC5B,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAE5D,OAAQA,EAAOtB,MACX,KAAK8C,EACD,IAAII,EAAY,CACZ1B,GAAI,EACJ2B,KAAM,QAENC,EAAc,CACd5B,GAAI,EACJ6B,QAAS/B,EAAOnB,UAEpB,OAAO,2BACAkB,GADP,IAEI0B,YAAY,GAAD,mBAAM1B,EAAM0B,aAAZ,CAAyBG,IACpCF,aAAa,GAAD,mBAAM3B,EAAM2B,cAAZ,CAA0BI,MAE9C,QACI,OAAO/B,IAMNiC,EAA2B,SAACnD,GACrC,MAAO,CACHH,KAAM8C,EACN3C,SAAUA,K,oBCjClBhB,EAAOC,QAAU,CAAC,aAAe,8B,oBCAjCD,EAAOC,QAAU,CAAC,aAAe,iC,oBCAjCD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,wBAA0B,yC,4ECDvF,iWAEMmE,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,SAACC,EAAUC,GAC/B,OAAOR,EAASS,IAAI,cAAgBD,EAAY,UAAYD,EAAU,IAAIG,MAAK,SAAAvD,GAAG,OAAIA,EAAIC,SAGjFF,EAAiB,SAACyD,GAC3B,OAAOX,EAASS,IAAI,WAAaE,EAAQ,KAGhCpD,EAAgB,SAACoD,GAC1B,OAAOX,EAASS,IAAI,kBAAoBE,EAAQ,KAGvCjD,EAAiB,SAACD,GAC3B,OAAOuC,EAASY,IAAI,kBAAmB,CAAEnD,OAAQA,KAGxCoD,EAAS,SAACF,GACnB,OAAOX,EAAS1B,KAAK,UAAYqC,EAAQ,GAAI,KAGpCG,EAAW,SAACH,GACrB,OAAOX,EAASe,OAAO,UAAYJ,EAAQ,GAAI,KAGtCK,EAAe,WACxB,OAAOhB,EAASS,IAAI,YAGXQ,EAAU,SAACC,EAAOC,GAAkC,IAAxBC,EAAuB,wDAC5D,OAAOpB,EAAS1B,KAAK,aAAc,CAAE4C,QAAOC,WAAUC,gBAG7CC,EAAW,WACpB,OAAOrB,EAASe,OAAO,eAGdO,EAAa,WACtB,OAAOtB,EAASS,IAAI,8B,uRC7ClBc,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAU,UAIZvF,EAAe,CACfwE,OAAQ,KACRO,MAAO,KACPrE,MAAO,KACPgC,YAAY,EACZG,YAAY,EACZF,cAAc,EACd6C,WAAY,IAGHxC,EAAc,WAAmC,IAAlCrB,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCACzD,OAAQA,EAAOtB,MACX,KAAK8E,EACD,OAAO,2BACAzD,GACAC,EAAOX,MAElB,KAAKoE,EACD,OAAO,2BACA1D,GADP,IAEIe,WAAYd,EAAOc,aAE3B,KAAK4C,EACD,OAAO,2BACA3D,GADP,IAEIkB,WAAYjB,EAAOiB,WACnBF,aAAcf,EAAOe,eAE7B,KAAK4C,EACD,OAAO,2BACA5D,GADP,IAEI6D,WAAY5D,EAAO4D,aAE3B,QACI,OAAO7D,IAKN8D,EAAgB,SAACjB,EAAQO,EAAOrE,EAAOgC,GAChD,MAAO,CACHpC,KAAM8E,EACNnE,KAAM,CAAEuD,SAAQO,QAAOrE,QAAOgC,WAAYA,KAIrCO,EAAoB,SAACP,GAC9B,MAAO,CACHpC,KAAM+E,EACN3C,WAAYA,IAIPQ,EAAqB,SAACL,EAAYF,GAC3C,MAAO,CACHrC,KAAMgF,EACNzC,WAAYA,EACZF,aAAcA,IAST+C,EAAwB,yDAAM,WAAO7E,GAAP,uBAAAC,EAAA,6DACvCD,EAASqC,GAAmB,GAAM,IADK,SAErB2B,cAFqB,OAGX,KADtB7D,EAFiC,QAG/BC,KAAKO,aAAmB,EACDR,EAAIC,KAAKA,KAA9Ba,EADqB,EACrBA,GAAIiD,EADiB,EACjBA,MAAOrE,EADU,EACVA,MACjBG,EAAS4E,EAAc3D,EAAIiD,EAAOrE,GAAO,KAE7CG,EAASqC,GAAmB,GAAO,IAPI,2CAAN,uDAUxBxC,EAAQ,SAACqE,EAAOC,EAAUC,GAAlB,8CACjB,WAAOpE,GAAP,eAAAC,EAAA,sEACsBgE,YAAQC,EAAOC,EAAUC,GAD/C,OAEgC,KADtBjE,EADV,QAEYC,KAAKO,YACTX,EAAS6E,KAEe,KAAxB1E,EAAIC,KAAKO,YACTX,EAAS8E,KANjB,2CADiB,uDAYRxC,EAAS,yDAClB,WAAOtC,GAAP,SAAAC,EAAA,sEACsBoE,cADtB,OAEgC,IAFhC,OAEYjE,KAAKO,YACTX,EAAS4E,EAAc,KAAM,KAAM,MAAM,IAHjD,2CADkB,uDASTE,EAAkB,yDAC3B,WAAO9E,GAAP,eAAAC,EAAA,sEACsBqE,cADtB,OACUnE,EADV,OAEIH,GAvCgB2E,EAuCCxE,EAAIC,KAAK2E,IAvCM,CACpCtF,KAAMiF,EACNC,WAAYA,KAsCRK,QAAQC,IAAI9E,GAHhB,iCArCmB,IAACwE,IAqCpB,OAD2B,wD,mBCzG/B/F,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,sB,mBCA3ED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,MAAQ,uB,uGCWjFqG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iCCPVhG,EAAe,CACfuG,QAAS,IAIAC,EAAiB,WAAmC,IAAlC7E,EAAiC,uDAAzB3B,EAC/ByG,EAAS,eAAO9E,GACpB,OAAO8E,G,wCCLLC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAY,YACZC,EAAmB,mBACnBC,EAA4B,4BAC5BC,EAAa,aACbC,EAAc,cAEhBjH,EAAe,CACfkH,MAAO,GACP9C,SAAU,IACVC,UAAW,EACX8C,WAAY,KACZtE,YAAY,EACZuE,kBAAmB,IA6DVC,EAAW,SAAC7C,GAAD,MAAa,CAAElE,KAAMoG,EAAQlC,WAExC8C,EAAa,SAAC9C,GAAD,MAAa,CAAElE,KAAMqG,EAAUnC,WAE5C+C,EAAa,SAACL,GAAD,MAAY,CAAE5G,KAAMsG,EAAWM,UAI5CM,EAAc,SAACnD,GAAD,MAAgB,CAAE/D,KAAM0G,EAAY3C,cAMlDoD,EAA4B,SAACL,EAAmB5C,GAApB,MAAgC,CAAElE,KAAMyG,EAA2BK,oBAAmB5C,W,QC1FzHkD,EAAuB,uBAEzB1H,EAAe,CACf2H,aAAa,G,SCKbC,EAAWC,YAAgB,CAC3BnG,mBACA6B,mBACAiD,iBACAsB,aFMwB,WAAmC,IAAlCnG,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAC1D,OAAQA,EAAOtB,MACX,KAAKoG,EACD,OAAO,2BACA/E,GADP,IAEIuF,MAAOvF,EAAMuF,MAAMa,KAAI,SAAAC,GACnB,OAAIA,EAAKlG,KAAOF,EAAO4C,OACZ,2BAAKwD,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,KAAKrB,EACD,OAAO,2BACAhF,GADP,IAEIuF,MAAOvF,EAAMuF,MAAMa,KAAI,SAAAC,GACnB,OAAIA,EAAKlG,KAAOF,EAAO4C,OACZ,2BAAKwD,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,KAAKpB,EACD,OAAO,2BACAjF,GADP,IAEIuF,MAAM,YAAKtF,EAAOsF,SAE1B,KAAKL,EACD,OAAO,2BACAlF,GADP,IAEIyC,SAAUxC,EAAOwC,WAEzB,KAAK4C,EACD,OAAO,2BACArF,GADP,IAEI0C,UAAWzC,EAAOyC,YAE1B,KAAK4C,EACD,OAAO,2BACAtF,GADP,IAEIwF,WAAYvF,EAAOuF,aAE3B,KAAKL,EACD,OAAO,2BACAnF,GADP,IAEIkB,WAAYjB,EAAOiB,aAE3B,KAAKkE,EACD,OAAO,2BACApF,GADP,IAEIyF,kBAAmBxF,EAAOwF,kBAAP,sBAA+BzF,EAAMyF,mBAArC,CAAwDxF,EAAO4C,SAC5E7C,EAAMyF,kBAAkBlF,QAAO,SAAAJ,GAAE,OAAIA,IAAOF,EAAO4C,YAEjE,QACI,OAAO7C,IE3DfqB,gBACAkF,WDRsB,WAAmC,IAAlCvG,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCACxD,OAAQA,EAAOtB,MACX,KAAKoH,EACD,OAAO,2BACA/F,GADP,IAEIgG,aAAa,IAErB,QACI,OAAOhG,MCEbwG,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYZ,EAAUO,EAAiBM,YAAgBC,OAIrEN,OAAOG,MAAQA,EAGAA,Q,0HCSAI,EA7BH,SAAUnG,GAEpB,OAEE,qBAAKoG,UAAWC,IAAQC,IAAxB,SAEE,gCACE,qBAAKF,UAAWC,IAAQE,KAAxB,SACE,cAAC,IAAD,CAASnG,GAAG,YAAYoG,gBAAiBH,IAAQI,OAAjD,0BAEF,qBAAKL,UAAWC,IAAQE,KAAxB,SACE,cAAC,IAAD,CAASnG,GAAG,WAAWoG,gBAAiBH,IAAQI,OAAhD,wBAEF,qBAAKL,UAAWC,IAAQE,KAAxB,SACE,cAAC,IAAD,CAASnG,GAAG,SAASoG,gBAAiBH,IAAQI,OAA9C,qBAEF,qBAAKL,UAAWC,IAAQE,KAAxB,SACE,cAAC,IAAD,CAASnG,GAAG,SAASoG,gBAAiBH,IAAQI,OAA9C,qBAEF,qBAAKL,UAAWC,IAAQE,KAAxB,SACE,cAAC,IAAD,CAASnG,GAAG,YAAYoG,gBAAiBH,IAAQI,OAAjD,8B,kBClBKC,GAND,SAAC1G,GACX,OACI,qBAAKoG,UAAaC,IAAQM,aAA1B,oB,qBCIOC,GANE,SAAC5G,GACd,OACI,qBAAKoG,UAAaC,KAAQM,aAA1B,uB,oBCJO,OAA0B,wCC4B1BE,GAtBA,SAAC7G,GAIZ,OACI,yBAAQoG,UAAWC,KAAQS,OAA3B,UACI,qBAAKV,UAAWC,KAAQU,KAAxB,SACI,qBAAKC,IAAI,kBAAkBC,IAAKF,OAEpC,qBAAKX,UAAWC,KAAQnI,MAAxB,SAEK8B,EAAME,WACH,gCACI,8BAAK,+BAAOF,EAAM9B,UAClB,8BAAK,wBAAQgJ,QAblB,WACXlH,EAAMW,UAYe,0BAEP,eAAC,IAAD,CAASP,GAAG,SAAZ,cAAsB,oDChBtC+G,G,uKAGE,OAAO,cAAC,GAAD,eAAYlH,KAAKD,Y,GAHFM,IAAMR,WAarBS,gBANS,SAACpB,GAAD,MAAY,CAChCe,WAAYf,EAAMqB,YAAYN,WAC9BhC,MAAOiB,EAAMqB,YAAYtC,MACzBmC,WAAYlB,EAAMqB,YAAYH,cAGM,CAACM,YAA1BJ,CAAmC4G,I,6BCOnCC,GAtBI,SAACpH,GAChB,IAAMqH,EAAa,WACfrH,EAAMsH,cACNtH,EAAM2B,SAAS3B,EAAM4B,SAAU5B,EAAMuH,SAGzC,OACI,mCACKvH,EAAMuH,SAAWvH,EAAM6B,UAClB,8BACE,wBAAQuE,UAAWC,KAAQmB,cAAeN,QAASG,EAAnD,SAAgErH,EAAMuH,WAExE,8BACE,wBAA2BL,QAASG,EAApC,SAAiDrH,EAAMuH,QAA1CvH,EAAMuH,aCyDxBE,GAtEG,SAACzH,GAEf,IAFyB,EAIa0H,mBAAS1H,EAAM6B,WAJ5B,oBAIlB8F,EAJkB,KAILC,EAJK,OAKOF,mBAAS,GAAlCG,EALkB,uBAMqBH,mBAJvB,GAFE,oBAMlBI,EANkB,KAMDC,EANC,OAOqBL,mBALvB,GAFE,oBAOlBM,EAPkB,KAQnBC,GARmB,KAQGC,KAAKC,KAAKnI,EAAM2E,WAAa3E,EAAM4B,WA8B3DwG,EAhBuB,WAEvB,IADA,IAAIC,EAAyB,GACpBC,EAAIX,EAAaW,EAAIL,EAAsB,EAAGK,IACnDD,EAAuBE,KAAKD,GAGhC,OAAoB,IAAhBX,GAGKA,EAAcG,EAAkB,GACrCC,EAAoBD,EAAkB,GAAMH,EAAcG,IAHnDO,EASDG,GAAqBjD,KAAI,SAAUgC,GAC7C,KAAIA,EAASI,EAAcE,EAAwB,GAGnD,OAAO,cAAC,GAAD,CACHN,OAAQA,EACR3F,SAAU5B,EAAM4B,SAChBD,SAAU3B,EAAM2B,SAChBE,UAAW7B,EAAM6B,UACjB8C,WAAY3E,EAAM2E,WAClB2C,YAAatH,EAAMsH,iBAI3B,OACI,sBAAKlB,UAAWC,KAAQoC,iBAAxB,UACqB,IAAhBd,EACK,KACA,8BACE,wBAAQT,QA1CK,WACzBU,EAAeD,EAAcG,IACJ,GAfN,IAgBWA,GAAoCC,EAhB/C,IAuDP,8CAEPK,EACAH,EAAsBD,GAAmBL,EACpC,KACA,8BACE,wBAAQT,QApDK,WACzBU,EAAeD,EAAcK,IAmDjB,wD,8BCnBLU,GA1CF,SAAC1I,GAAW,IAGjBV,EAQAU,EARAV,GACAqJ,EAOA3I,EAPA2I,MACAlD,EAMAzF,EANAyF,SACAb,EAKA5E,EALA4E,kBACAgE,EAIA5I,EAJA4I,qBACAC,EAGA7I,EAHA6I,mBACA5H,EAEAjB,EAFAiB,KACAnC,EACAkB,EADAlB,OAGJ,OACI,sBAAKsH,UAAWC,KAAQb,KAAxB,UACI,sBAAKY,UAAWC,KAAQyC,UAAxB,UACI,8BACI,cAAC,IAAD,CAAS1I,GAAI,UAAYd,EAAzB,SACI,qBAAK2H,IAAc,MAAT0B,EAAgBI,KAAgBJ,EAAO3B,IAAI,kBAG7D,8BACKvB,EACK,wBAAQuD,SAAUpE,EAAkBqE,MAAK,SAAAjH,GAAM,OAAIA,IAAW1C,KAAK4H,QAAS,WAC1E0B,EAAqBtJ,IADvB,sBAIA,wBAAQ0J,SAAUpE,EAAkBqE,MAAK,SAAAjH,GAAM,OAAIA,IAAW1C,KAAK4H,QAAS,WAC1E2B,EAAmBvJ,IADrB,yBAMd,sBAAK8G,UAAWC,KAAQ6C,UAAxB,UACI,qBAAK9C,UAAWC,KAAQpF,KAAxB,SAA+BA,IAC/B,qBAAKmF,UAAWC,KAAQvH,OAAxB,SAAiCA,IACjC,sBAAKsH,UAAWC,KAAQ8C,QAAxB,oBAAwC,2CAAxC,OACA,sBAAK/C,UAAWC,KAAQ+C,KAAxB,mBAAoC,qD,qBCRrCC,GA9BD,SAACrJ,GACX,IAAI0E,EAAQ1E,EAAM0E,MAAMa,KAAI,SAAAC,GAAI,OAAI,cAAC,GAAD,CAEhClG,GAAIkG,EAAKlG,GACT2B,KAAMuE,EAAKvE,KACXnC,OAAQ0G,EAAK1G,OACb6J,MAAOnD,EAAK8D,OAAOC,MACnB9D,SAAUD,EAAKC,SACfb,kBAAmB5E,EAAM4E,kBACzBiE,mBAAoB7I,EAAM6I,mBAC1BD,qBAAsB5I,EAAM4I,sBARvBpD,EAAKlG,OAWd,OACI,sBAAK8G,UAAWC,KAAQ3B,MAAxB,UACI,8BACKA,IAEL,cAAC,GAAD,CACI9C,SAAU5B,EAAM4B,SAChB+C,WAAY3E,EAAM2E,WAClBhD,SAAU3B,EAAM2B,SAChBE,UAAW7B,EAAM6B,UACjByF,YAAatH,EAAMsH,kB,4BCR7BkC,G,kLAGEvJ,KAAKD,MAAMyJ,qBAAqBxJ,KAAKD,MAAM4B,SAAU3B,KAAKD,MAAM6B,a,6CAGhE5B,KAAKD,MAAM0J,4B,+BAIX,OAAKzJ,KAAKD,MAAM0E,MAAMiF,OAIlB,mCACI,cAAC,GAAD,CACIjF,MAAOzE,KAAKD,MAAM0E,MAClBkF,YAAa3J,KAAKD,MAAM6J,WACxBjI,SAAU3B,KAAKD,MAAM4B,SACrB+C,WAAY1E,KAAKD,MAAM2E,WACvBmF,SAAU7J,KAAKD,MAAM8J,SACrBC,SAAU9J,KAAK8J,SACfnF,kBAAmB3E,KAAKD,MAAM4E,kBAC9BiE,mBAAoB5I,KAAKD,MAAM6I,mBAC/BD,qBAAsB3I,KAAKD,MAAM4I,qBACjCjH,SAAU1B,KAAKD,MAAMyJ,qBACrBnC,YAAarH,KAAKD,MAAM0J,wBACxB7H,UAAW5B,KAAKD,MAAM6B,cAhBvB,cAACmI,GAAA,EAAD,Q,GAXe1J,IAAMR,WA4CzBgG,eACXvF,aAXkB,SAACpB,GACnB,MAAO,CACHuF,MAAOuF,aAAc9K,GACrByC,SAAUsI,KAAeC,YAAYhL,GACrC0C,UAAWqI,KAAeE,aAAajL,GACvCwF,WAAYuF,KAAeG,cAAclL,GACzCkB,WAAY6J,KAAeI,cAAcnL,GACzCyF,kBAAmBsF,KAAeK,sBAAsBpL,MAInC,CACrB0K,WbkBkB,SAACjI,GAAD,MAAe,CAAE9D,KAAMuG,EAAWzC,aajBpD6H,qBb2B4B,SAAC7H,EAAUC,GAAX,8CAChC,WAAOxD,GAAP,eAAAC,EAAA,6DACID,EAAS2G,EAAYnD,IADzB,SAEsBF,YAASC,EAAUC,GAFzC,OAEUrD,EAFV,OAGIH,EAAS0G,EAAWvG,EAAIgM,QACxBnM,GAXqBsG,EAWCnG,EAAImG,WAXW,CAAE7G,KAAM2G,EAAaE,gBAO9D,iCAPwB,IAACA,IAOzB,OADgC,uDa1B5B+E,wBbmC+B,WACnC,OAAO,SAACrL,GACJA,EAAS0G,EAAW,OapCpB8D,mBbwC0B,SAAC7G,GAAD,8CAE9B,WAAO3D,GAAP,SAAAC,EAAA,6DACID,EAAS4G,GAA0B,EAAMjD,IAD7C,SAEsBE,YAAOF,GAF7B,OAGgC,IAHhC,OAGYvD,KAAKO,YACTX,EAASwG,EAAS7C,IAEtB3D,EAAS4G,GAA0B,EAAOjD,IAN9C,2CAF8B,uDavC1B4G,qBbmD4B,SAAC5G,GAAD,8CAChC,WAAO3D,GAAP,SAAAC,EAAA,6DACID,EAAS4G,GAA0B,EAAMjD,IAD7C,SAEsBG,YAASH,GAF/B,OAGgC,IAHhC,OAGYvD,KAAKO,YACTX,EAASyG,EAAW9C,IAExB3D,EAAS4G,GAA0B,EAAOjD,IAN9C,2CADgC,uDalD5BgD,gBAEJnF,KATWiG,CAUb0D,I,+CC9DaiB,GARG,SAACzK,GACf,OACI,qBAAKoG,UAAWC,KAAQqE,MAAxB,SACK1K,EAAM2K,YCyBJC,GA5BQ,SAAC5K,GAAW,IACvBiB,EAAkCjB,EAAlCiB,KAAa4J,GAAqB7K,EAA5B8K,MAA4B9K,EAArB6K,SAAYE,EADH,aACY/K,EADZ,4BAE9B,OACI,gCACI,cAAC,KAAD,yBAAOiB,KAAMA,GAAU8J,GAAvB,aAEQ,YAAgB,IAAbC,EAAY,EAAZA,MACC,OAAOH,EAAQtF,KAAI,SAAA0F,GACf,OACI,eAAC,IAAMC,SAAP,WACI,+CACIpN,KAAK,WACLwB,GAAI2L,EAAOE,OACPH,GAHR,IAIIG,MAAOF,EAAOE,MACdC,QAASJ,EAAMG,MAAME,SAASJ,EAAOE,UACrC,uBAAOG,QAASL,EAAOE,MAAvB,SAA+BF,EAAOM,QAPzBN,EAAOM,YAchD,cAAC,KAAD,CAActK,KAAMA,EAAMuK,UAAWf,S,qBCIlCgB,I,OAxBU,SAACzL,GAAW,IACzB8K,EAAyB9K,EAAzB8K,MAAO7J,EAAkBjB,EAAlBiB,KAAS8J,EADQ,aACC/K,EADD,kBAEhC,OACI,sBAAKoG,UAAWC,KAAQqF,YAAxB,UACI,uBAAOJ,QAASrK,EAAhB,SAAuB6J,IACvB,cAAC,KAAD,CAAO7J,KAAMA,EAAb,SAEQ,YAAsB,IAAnB0K,EAAkB,EAAlBA,KAAMX,EAAY,EAAZA,MACGY,EAAkBD,EAAlBC,cACAT,EAAUH,EAAVG,MACR,OAAO,cAAC,KAAD,qCACH7L,GAAI2B,GACA+J,GACAD,GAHD,IAIHc,SAAUV,EACVW,SAAU,SAAAC,GAAG,OAAIH,EAAc3K,EAAM8K,UAIrD,cAAC,KAAD,CAAc9K,KAAMA,EAAMuK,UAAWf,UCrB3CuB,GAAQ,SAAChM,GACX,OAAO,sBAAKoG,UAAWC,KAAQqF,YAAxB,UACH,uBAAOJ,QAAStL,EAAMiB,KAAtB,SAA6BjB,EAAM8K,QACnC,gCACI,cAAC,KAAD,CAAO1E,UAAWpG,EAAMoG,UAAW9G,GAAIU,EAAMiB,KAAMA,KAAMjB,EAAMiB,KAAMnD,KAAMkC,EAAMlC,OACjF,cAAC,KAAD,CAAcmD,KAAMjB,EAAMiB,KAAMuK,UAAWf,YAkBxCwB,GAbK,SAACjM,GAAW,IAEpB8K,EAAsE9K,EAAtE8K,MAAO7J,EAA+DjB,EAA/DiB,KAAMsB,EAAyDvC,EAAzDuC,MAAOC,EAAkDxC,EAAlDwC,SAAU0J,EAAwClM,EAAxCkM,aAAcC,EAA0BnM,EAA1BmM,gBAAiBrO,EAASkC,EAATlC,KAErE,OACI,mCACKoO,IAAiB3J,GAAU4J,IAAoB3J,EAC5C,cAAC,GAAD,CAAO4D,UAAWC,KAAQ+F,MAAOnL,KAAMA,EAAM6J,MAAOA,EAAOhN,KAAMA,IACjE,cAAC,GAAD,CAAOsI,UAAW,KAAMnF,KAAMA,EAAM6J,MAAOA,EAAOhN,KAAMA,OCYzDuO,GA/BY,SAACrM,GAAW,IAC3BiB,EAAkCjB,EAAlCiB,KAAM6J,EAA4B9K,EAA5B8K,MAAOD,EAAqB7K,EAArB6K,QAAYE,EADC,aACQ/K,EADR,4BAElC,OACI,gCACI,uBAAOsL,QAASrK,EAAhB,SAAuB6J,IACvB,wBACA,cAAC,KAAD,yBAAO7J,KAAMA,GAAU8J,GAAvB,aAEQ,YAAgB,IAAbC,EAAY,EAAZA,MAEC,OADA3H,QAAQC,IAAI,QAAQ0H,GACbH,EAAQtF,KAAI,SAAA0F,GACf,OACI,eAAC,IAAMC,SAAP,WACI,+CACIpN,KAAK,QACLwB,GAAI2L,EAAOE,OACPH,GAHR,IAIIG,MAAOF,EAAOE,MACdC,QAASJ,EAAMG,QAAUF,EAAOE,SAChC,uBAAOG,QAASL,EAAOE,MAAvB,SAA+BF,EAAOM,QAPzBN,EAAOM,YAchD,cAAC,KAAD,CAActK,KAAMA,EAAMuK,UAAWf,SCNlC6B,GAnBM,SAACtM,GAAW,IACrB8K,EAAkC9K,EAAlC8K,MAAO7J,EAA2BjB,EAA3BiB,KAAM4J,EAAqB7K,EAArB6K,QAAYE,EADL,aACc/K,EADd,4BAE5B,OACI,sBAAKoG,UAAWC,KAAQqF,YAAxB,UACI,uBAAOJ,QAASrK,EAAhB,SAAuB6J,IACvB,cAAC,KAAD,yBAAOyB,GAAG,SAASjN,GAAI2B,EAAMA,KAAMA,GAAU8J,GAA7C,aAEQF,EAAQtF,KAAI,SAAA0F,GACR,OAAO,wBAA2BE,MAAOF,EAAOE,MAAzC,SACFF,EAAOM,KADQN,EAAOE,aAMvC,cAAC,KAAD,CAAclK,KAAMA,EAAMuK,UAAWf,SCHlC+B,GAXQ,SAACxM,GAAW,IACvB8K,EAAyB9K,EAAzB8K,MAAO7J,EAAkBjB,EAAlBiB,KAAS8J,EADM,aACG/K,EADH,kBAE9B,OACI,sBAAKoG,UAAWC,KAAQqF,YAAxB,UACI,uBAAOJ,QAASrK,EAAhB,SAAuB6J,IACvB,cAAC,KAAD,aAAOyB,GAAG,WAAWjN,GAAI2B,EAAMA,KAAMA,GAAU8J,IAC/C,cAAC,KAAD,CAAc9J,KAAMA,EAAMuK,UAAWf,SCUlCgC,GAbO,SAACzM,GAAW,IACtB0M,EAAqB1M,EAArB0M,QAAY3B,EADS,aACA/K,EADA,aAE7B,OAAQ0M,GACJ,IAAK,QAAS,OAAO,cAAC,GAAD,eAAiB3B,IACtC,IAAK,WAAY,OAAO,cAAC,GAAD,eAAoBA,IAC5C,IAAK,SAAU,OAAO,cAAC,GAAD,eAAkBA,IACxC,IAAK,QAAS,OAAO,cAAC,GAAD,eAAwBA,IAC7C,IAAK,WAAY,OAAO,cAAC,GAAD,eAAoBA,IAC5C,IAAK,OAAQ,OAAO,cAAC,GAAD,eAAsBA,IAC1C,QAAS,OAAO,OCgETxK,gBAPc,SAACpB,GAC1B,MAAO,CACHe,WAAYf,EAAMqB,YAAYN,WAC9B8C,WAAY7D,EAAMqB,YAAYwC,cAIE,CAAE9E,WAA3BqC,EAxEG,SAACP,GAAW,IAEnB9B,EAAiC8B,EAAjC9B,MAAOgC,EAA0BF,EAA1BE,WAAY8C,EAAchD,EAAdgD,WAEpB2J,EAAe,CACjB,CAAEpB,IAAK,cAAeJ,MAAO,cAG3ByB,EAAgB,CAClBrK,MAAO,GACPC,SAAU,GACVC,WAAYkK,GAGVE,EAAmBC,KAAW,CAChCvK,MAAOuK,OAAavK,MAAM,wBAAwBwK,SAAS,YAC3DvK,SAAUsK,OAAaC,SAAS,cAOpC,OAAI7M,EAAqB,cAAC,IAAD,CAAUE,GAAI,aAGnC,cAAC,KAAD,CAAQwM,cAAeA,EAAeC,iBAAkBA,EAAkBG,SAP7D,SAAAC,GACb/O,EAAO+O,EAAO1K,MAAO0K,EAAOzK,UAAU,IAMtC,SAEQ,SAAA0K,GACI,OAAO,eAAC,KAAD,WACH,uCACA,cAAC,GAAD,CACI3K,MAAO2K,EAAOD,OAAO1K,MACrB2J,aAAcgB,EAAOC,QAAQ5K,MAC7BmK,QAAQ,QACR5O,KAAK,QACLgN,MAAM,QACN7J,KAAK,UACT,cAAC,GAAD,CACIuB,SAAU0K,EAAOD,OAAOzK,SACxB2J,gBAAiBe,EAAOC,QAAQ3K,SAChCkK,QAAQ,QACR5O,KAAK,WACLgN,MAAM,WACN7J,KAAK,aACT,cAAC,GAAD,CACIyL,QAAQ,WACR5B,MAAM,cACN7J,KAAK,aACL4J,QAAS8B,IACb,sBACA,wBAAQ7O,KAAK,SAASkL,UAAWkE,EAAOE,QAAxC,mBACEpK,EAEI,gCACE,sBACA,qBAAKiE,IAAKjE,EAAYgE,IAAI,eAH9B,cC3DfqG,GAAe,SAACvN,GACzB,OAAO,SAACE,GACJ,OAAO,cAAC,IAAMsN,SAAP,CAAgBC,SAAU,cAACvD,GAAA,EAAD,IAA1B,SACH,cAAClK,EAAD,eAAeE,QCSrBwN,GAAUlN,IAAMmN,MAAK,kBAAM,iCAC3BC,GAAmBpN,IAAMmN,MAAK,kBAAM,iCAEpCE,G,kLAGF1N,KAAKD,MAAM4N,kB,+BAIX,OAAK3N,KAAKD,MAAMmF,YAEd,mCACE,sBAAKiB,UAAU,cAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CAAOyH,KAAK,WAAWC,OAAQT,GAAaG,MAC5C,cAAC,IAAD,CAAOK,KAAK,oBAAoBC,OAAQT,GAAaK,MACrD,cAAC,IAAD,CAAOG,KAAK,iBAAiBC,OAAQT,GAAaK,MAClD,cAAC,IAAD,CAAOK,OAAK,EAACF,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,GAAD,OACtC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,eAbP,cAAC9D,GAAA,EAAD,Q,GAPtB1J,IAAMR,WAgCpBkO,GAAgBlI,YAClBmI,IACA1N,aANsB,SAACpB,GAAD,MAAY,CAClCgG,YAAahG,EAAMuG,WAAWP,eAKL,CAAEyI,cvB9BA,kBAAM,SAACvP,GACjC,IAAI6P,EAAU7P,EAAS6E,eACvBiL,QAAQC,IAAI,CAACF,IAAUnM,MAAK,WAC3B1D,EALqC,CAACP,KAAMoH,WuB8B5BY,CAGlB6H,IAUaU,GARD,SAACrO,GACb,OAAO,cAAC,IAAD,CAAYsO,SAAUC,kBAAtB,SACL,cAAC,IAAD,CAAUxI,MAAOA,EAAjB,SACE,cAACiI,GAAD,SClDKQ,GAAqB,WAC9BC,IAASX,OAAQ,cAAC,GAAD,IACfY,SAASC,eAAe,UAG5BH,GAAmBzI,GACnBH,OAAOG,MAAQA,EAOfxC,K,mBCpBAtG,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,QAAU,wB,gCCDhN,mHAEagN,EAAiB,CAC1B0E,YAD0B,SACdzP,GACR,OAAOA,EAAMmG,aAAaZ,OAE9ByF,YAJ0B,SAIdhL,GACR,OAAOA,EAAMmG,aAAa1D,UAE9BwI,aAP0B,SAObjL,GACT,OAAOA,EAAMmG,aAAazD,WAE9BwI,cAV0B,SAUZlL,GACV,OAAOA,EAAMmG,aAAaX,YAE9B2F,cAb0B,SAaZnL,GACV,OAAOA,EAAMmG,aAAajF,YAE9BkK,sBAhB0B,SAgBJpL,GAClB,OAAOA,EAAMmG,aAAaV,mBAE9BiK,oBAnB0B,SAmBN1P,GAChB,OAAOc,KAAK2O,YAAYzP,GAAOO,QAAO,SAAA8F,GAAI,OAAI,OAIzCyE,EAAgB6E,YAAe5E,EAAe0E,aAAa,SAAClK,GACrE,OAAOA,EAAMhF,QAAO,SAAA8F,GAAI,OAAI,QAGnBuJ,EAAiB,CAC1BC,SAD0B,SACjB7P,GACL,OAAOA,EAAMD,eAAezB,OAEhCwR,WAJ0B,SAIf9P,GACP,OAAOA,EAAMD,eAAevB,SAEhCuR,gBAP0B,SAOV/P,GACZ,OAAOA,EAAMD,eAAexB,aAEhCyR,SAV0B,SAUjBhQ,GACL,OAAOA,EAAMqB,YAAYtC,S,2CCzClB,G,KAAA,IAA0B,uC,kBCY1B8L,IARG,WACd,OACI,qBAAK5D,UAAWC,IAAQ+I,mBAAxB,SACI,qBAAKhJ,UAAWC,IAAQgJ,UAAWpI,IAAKoI,EAAWrI,IAAI,kB,mBCNnE/J,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,cAAgB,oC,mBCA1FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,yB","file":"static/js/main.cb840421.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__2qmHb\",\"preloader\":\"Preloader_preloader__3nzjs\"};","import { getUserProfile, getUserStatus, sendUserStatus } from '../API/api'\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst APDATE_USER_STATUS = 'APDATE_USER_STATUS'\r\nconst ADD_NEW_POST = 'ADD_NEW_POST'\r\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    newPostText: '',\r\n    profile: null,\r\n    userStatus: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case APDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            }\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                id: 1,\r\n                postText: action.postText,\r\n                userAva: null,\r\n                userName: action.login,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const updateUserStatusAC = (userStatus) => ({ type: APDATE_USER_STATUS, userStatus: userStatus })\r\n\r\nexport const addNewPostAC = (postText, login) => ({ type: ADD_NEW_POST, postText, login })\r\n\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const updatePostText = (postText) => ({ type: UPDATE_POST_TEXT, postText: postText })\r\n\r\n\r\nexport const getUserProfileThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserProfile(UserId)\r\n        dispatch(setUserProfile(res.data))\r\n    }\r\n// Делаем запрос на сервер, и диспатчим данные в стор\r\n\r\nexport const removeUserProfileThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUserProfile(null))\r\n    }\r\n} // Удаляем из стора загруженный профиль\r\n\r\nexport const getUserStatusThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserStatus(UserId)\r\n        dispatch(updateUserStatusAC(res.data))\r\n    }\r\n// Делаем запрос и диспатчим статус пользователя\r\n\r\nexport const updateUserStatusThunkCreator = (status) => \r\n    async (dispatch) => {\r\n       const res = await sendUserStatus(status)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(updateUserStatusAC(status))\r\n            }\r\n    }\r\n\r\n\r\nexport const addNewPostThunkCreator = (postText, login) => (dispatch) => {\r\n    dispatch(addNewPostAC(postText, login))\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/defaultAvatar.0334f4b4.png\";","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from 'react-redux'\r\nimport { LoggedInTogglegAC, LoggedInFetchingAC, logOut } from '../redux/authReducer'\r\n\r\nexport const LoggedInRedirect = (Component) => {\r\n    class RedirectedComponent extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n            this.props = props\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                 {!this.props.isLoggedIn && this.props.confirmation ? <Redirect to='/Login' /> : <></>}\r\n                 {this.props.isFetching && !this.props.isLoggedIn ? <></> : <Component {...this.props} />}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsLoggedInRedirect = (state) => ({\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        isFetching: state.authReducer.isFetching,\r\n        confirmation: state.authReducer.confirmation,\r\n    })\r\n    let LogInRedirectComponent = connect(mapStateToPropsLoggedInRedirect, {LoggedInTogglegAC, LoggedInFetchingAC, logOut})(RedirectedComponent)\r\n    return LogInRedirectComponent\r\n}\r\n\r\n","const POST_NEW_TEXT = 'POST_NEW_TEXT'\r\n\r\nlet initialState = {\r\n    dialogsData: [],\r\n    messagesData: [],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case POST_NEW_TEXT:\r\n            let newDialog = {\r\n                id: 4,\r\n                name: 'Tema'\r\n            }\r\n            let newPostItem = {\r\n                id: 4,\r\n                message: action.postText,\r\n            }\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newDialog],\r\n                messagesData: [...state.messagesData, newPostItem],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postNewTextActionCreator = (postText) => {\r\n    return {\r\n        type: POST_NEW_TEXT,\r\n        postText: postText\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Music_contentColor__3tC_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Settings_contentColor__1LY4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Users_contentColor__2Kips\",\"addUsersButtonContainer\":\"Users_addUsersButtonContainer__3tC_O\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-Key': '0956be17-9287-4aaa-8ddc-9d18425e88b9',\r\n    }\r\n})\r\n\r\nexport const getUsers = (pageSize, pageCount) => {\r\n    return instance.get('users?page=' + pageCount + '&count=' + pageSize, {}).then(res => res.data)\r\n} // Получаем с сервера объект с пользователями (50 пользователей за раз)\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return instance.get('profile/' + userId, {})\r\n} // Получаем с сервера профиль пользователя согласно id выбранного пользователя\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return instance.get('profile/status/' + userId, {})\r\n} // Получаем с сервера статус профиля пользователя\r\n\r\nexport const sendUserStatus = (status) => {\r\n    return instance.put('profile/status/', { status: status })\r\n} // Отправляем на сервер новый статус пользователя\r\n\r\nexport const follow = (userId) => {\r\n    return instance.post('follow/' + userId, {}, {})\r\n} // Отправляем запрос на подписку на пользователя\r\n\r\nexport const unFollow = (userId) => {\r\n    return instance.delete('follow/' + userId, {}, {})\r\n} // Отправляем запрос на отписку от пользвателя\r\n\r\nexport const logInProfile = () => {\r\n    return instance.get('auth/me')\r\n} // Отпраялем запрос на проверку верификации профиля\r\n\r\nexport const loginMe = (email, password, rememberMe = false) => {\r\n    return instance.post('auth/login', { email, password, rememberMe })\r\n} // Ллогинимся в приложение\r\n\r\nexport const logOutMe = () => {\r\n    return instance.delete('auth/login')\r\n} // Выходим из приложения\r\n\r\nexport const getCaptcha = () => {\r\n    return instance.get('security/get-captcha-url')\r\n} // Отправляем запрос на капчу","import { loginMe, logInProfile, getCaptcha, logOutMe } from '../API/api'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst LOGGED_IN_TOGGLE = 'LOGGED_IN_TOGGLE'\r\nconst LOGGED_IN_FETCHING = 'LOGGED_IN_FETCHING'\r\nconst CAPTCHA = 'CAPTCHA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    confirmation: false,\r\n    captchaImg: '',\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,//Деструктуризация\r\n            }\r\n        case LOGGED_IN_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        case LOGGED_IN_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n                confirmation: action.confirmation\r\n            }\r\n        case CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaImg: action.captchaImg\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataAC = (userId, email, login, isLoggedIn) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { userId, email, login, isLoggedIn: isLoggedIn },\r\n    }\r\n}\r\n\r\nexport const LoggedInTogglegAC = (isLoggedIn) => {\r\n    return {\r\n        type: LOGGED_IN_TOGGLE,\r\n        isLoggedIn: isLoggedIn\r\n    }\r\n}\r\n\r\nexport const LoggedInFetchingAC = (isFetching, confirmation) => {\r\n    return {\r\n        type: LOGGED_IN_FETCHING,\r\n        isFetching: isFetching,\r\n        confirmation: confirmation\r\n    }\r\n}\r\n\r\nexport const captcha = (captchaImg) => ({\r\n    type: CAPTCHA,\r\n    captchaImg: captchaImg\r\n})\r\n\r\nexport const logInUserThunkCreator = () => async (dispatch) => {\r\n    dispatch(LoggedInFetchingAC(true, false))\r\n    const res = await logInProfile()\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data\r\n        dispatch(setUserDataAC(id, email, login, true))\r\n    }\r\n    dispatch(LoggedInFetchingAC(false, true))\r\n}\r\n\r\nexport const login = (email, password, rememberMe) =>\r\n    async (dispatch) => {\r\n        const res = await loginMe(email, password, rememberMe)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(logInUserThunkCreator())\r\n        }\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaThunk())\r\n        }\r\n    }\r\n\r\n\r\nexport const logOut = () =>\r\n    async (dispatch) => {\r\n        const res = await logOutMe()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserDataAC(null, null, null, false))\r\n        }\r\n    }\r\n\r\n\r\nexport const getCaptchaThunk = () =>\r\n    async (dispatch) => {\r\n        const res = await getCaptcha()\r\n        dispatch(captcha(res.data.url))\r\n        console.log(res)\r\n    }\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3jRL3\",\"item\":\"Nav_item__3Mn2D\",\"active\":\"Nav_active__10tEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3P2GR\",\"formControl\":\"Login_formControl__2h8Kz\",\"alert\":\"Login_alert__3TE9q\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    friends: [\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state}\r\n    return stateCopy\r\n}\r\nexport default friendsReducer","import { follow, unFollow, getUsers } from '../API/api'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst PAGE_SIZE = 'PAGE_SIZE'\r\nconst TOGGLE_PRELOADER = 'TOGGLE_PRELOADER'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\nconst PAGE_COUNT = 'PAGE_COUNT'\r\nconst TOTAL_COUNT = 'TOTAL_COUNT'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    pageCount: 1,\r\n    totalCount: null,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case PAGE_SIZE:\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        case PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.pageCount\r\n            }\r\n        case TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.followingProgress ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\r\n\r\nexport const pageSizeAC = (pageSize) => ({ type: PAGE_SIZE, pageSize })\r\n\r\nexport const pageCountAC = (pageCount) => ({ type: PAGE_COUNT, pageCount })\r\n\r\nexport const totalCountAR = (totalCount) => ({ type: TOTAL_COUNT, totalCount })\r\n\r\nexport const togglePreloaderAC = (isFetching) => ({ type: TOGGLE_PRELOADER, isFetching })\r\n\r\nexport const toggleFollowingProgressAC = (followingProgress, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, followingProgress, userId })\r\n\r\nexport const getUsersThunkCreator = (pageSize, pageCount) =>\r\n    async (dispatch) => {\r\n        dispatch(pageCountAC(pageCount))\r\n        const res = await getUsers(pageSize, pageCount)\r\n        dispatch(setUsersAC(res.items))\r\n        dispatch(totalCountAR(res.totalCount))\r\n    }\r\n\r\n\r\nexport const removeUsersThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUsersAC([]))\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId) =>\r\n\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await follow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(followAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\nexport const unFollowThunkCreator = (userId) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await unFollow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(unfollowAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { logInUserThunkCreator } from \"./authReducer\"\r\n\r\nconst INITIALIZED_SUCCSESS = 'INITIALIZED_SUCCSESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCSESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccsess = () => ({type: INITIALIZED_SUCCSESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(logInUserThunkCreator())\r\n   Promise.all([promise]).then(() => {\r\n    dispatch(initializeSuccsess())\r\n   })\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport { dialogsReducer } from './dialogsReducer'\r\nimport { friendsReducer } from './friendsReducer'\r\nimport {usersReducer} from './usersReducer'\r\nimport {authReducer} from './authReducer'\r\nimport {appReducer} from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    friendsReducer,\r\n    usersReducer,\r\n    authReducer,\r\n    appReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport classes from './Nav.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Nav = function (props) {\r\n  \r\n  return (\r\n    \r\n    <div className={classes.nav}>\r\n      \r\n      <nav >\r\n        <div className={classes.item}>\r\n          <NavLink to='/Profile/' activeClassName={classes.active}>My Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Dialogs' activeClassName={classes.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Users' activeClassName={classes.active}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Music' activeClassName={classes.active}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Settings' activeClassName={classes.active}>Settings</NavLink>\r\n        </div>\r\n      </nav>\r\n        \r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Nav ","import React from 'react'\r\nimport classes from './Music.module.css'\r\nconst Music = (props) => {\r\n    return (\r\n        <div className = {classes.contentColor}>Music</div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport classes from './Settings.module.css'\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className = {classes.contentColor}>Settings</div>\r\n    )\r\n}\r\n\r\nexport default Settings","export default __webpack_public_path__ + \"static/media/networkLogo.e95a8eba.png\";","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport logo from '../../assets/networkLogo.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logOut()\r\n    }\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>\r\n                <img alt='TestNetworkLogo' src={logo} />\r\n            </div>\r\n            <div className={classes.login}>\r\n\r\n                {props.isLoggedIn ?\r\n                    <div>\r\n                        <div><span>{props.login}</span></div>\r\n                        <div><button onClick={logout}>Log out</button></div>\r\n                    </div>\r\n                    : <NavLink to='/Login'> <button>Login</button></NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport { logOut } from '../../redux/authReducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.authReducer.isLoggedIn,\r\n    login: state.authReducer.login,\r\n    isFetching: state.authReducer.isFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, {logOut})(HeaderContainer) ","import React from 'react'\r\nimport classes from './PageButton.module.css'\r\n\r\n\r\nconst PageButton = (props) => {\r\n    const switchPage = () => {\r\n        props.removeUsers()\r\n        props.getUsers(props.pageSize, props.button)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.button === props.pageCount\r\n                ? <div>\r\n                    <button className={classes.checkedButton} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n                : <div>\r\n                    <button key={props.button} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PageButton","import React, { useState } from 'react'\r\nimport PageButton from './PageButton'\r\nimport classes from './PageButton.module.css'\r\n\r\nconst Paginator = (props) => {\r\n\r\n    const buttonsPortion = 5\r\n    let touchedDecrementButton = false\r\n    const [initialPage, setInitialPage] = useState(props.pageCount)\r\n    const [numberOfShowedButtons] = useState(7)\r\n    const [decrementNumber, setDecrementNumber] = useState(buttonsPortion)\r\n    const [incrementNumber, setIncrementNumber] = useState(buttonsPortion)\r\n    const numberOfPageButtons = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n\r\n    const incrementInitialPage = () => {\r\n        setInitialPage(initialPage + incrementNumber)\r\n    }\r\n\r\n    const decrementInitialPage = () => {\r\n        setInitialPage(initialPage - decrementNumber)\r\n        touchedDecrementButton = true\r\n        if (touchedDecrementButton && decrementNumber !== buttonsPortion) setDecrementNumber(buttonsPortion)\r\n\r\n    }\r\n\r\n    const createButtonsArray = () => {\r\n        let buttonsInitializeArray = []\r\n        for (let i = initialPage; i < numberOfPageButtons + 1; i++) {\r\n            buttonsInitializeArray.push(i)\r\n        }\r\n\r\n        if (initialPage === 1) {\r\n            return buttonsInitializeArray\r\n        }\r\n        else if (initialPage - decrementNumber < 0) {\r\n            setDecrementNumber((decrementNumber - 1) + (initialPage - decrementNumber))\r\n        }\r\n\r\n        return buttonsInitializeArray\r\n    }\r\n\r\n    let buttons = createButtonsArray().map(function (button) {\r\n        if (button > initialPage + numberOfShowedButtons - 1) {\r\n            return\r\n        }\r\n        return <PageButton\r\n            button={button}\r\n            pageSize={props.pageSize}\r\n            getUsers={props.getUsers}\r\n            pageCount={props.pageCount}\r\n            totalCount={props.totalCount}\r\n            removeUsers={props.removeUsers}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className={classes.buttonsContainer}>\r\n            {initialPage === 1\r\n                ? null\r\n                : <div>\r\n                    <button onClick={decrementInitialPage}>назад</button>\r\n                </div>}\r\n            {buttons}\r\n            {numberOfPageButtons - incrementNumber <= initialPage\r\n                ? null\r\n                : <div>\r\n                    <button onClick={incrementInitialPage}>Вперед</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport classes from './User.module.css'\r\nimport defaultAvatar from '../../../assets/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    const {\r\n        id,\r\n        photo,\r\n        followed,\r\n        followingProgress,\r\n        unFollowThunkCreator,\r\n        followThunkCreator,\r\n        name,\r\n        status\r\n    } = props\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div className={classes.logoBlock}>\r\n                <div>\r\n                    <NavLink to={'/Users/' + id} >\r\n                        <img src={photo == null ? defaultAvatar : photo} alt=\"UserPhoto\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {followed\r\n                        ? <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            unFollowThunkCreator(id)\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            followThunkCreator(id)\r\n                        }}>Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={classes.infoBlock}>\r\n                <div className={classes.name}>{name}</div>\r\n                <div className={classes.status}>{status}</div>\r\n                <div className={classes.country}>Belarus<i>(hardcode)</i>,</div>\r\n                <div className={classes.city}>Bralaw<i>(hardcode)</i></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport Paginator from './Paginator/Paginator'\r\nimport User from './User/User'\r\nimport classes from './Users.module.css'\r\n\r\nconst Users = (props) => {\r\n    let users = props.users.map(user => <User\r\n        key={user.id}\r\n        id={user.id}\r\n        name={user.name}\r\n        status={user.status}\r\n        photo={user.photos.small}\r\n        followed={user.followed}\r\n        followingProgress={props.followingProgress}\r\n        followThunkCreator={props.followThunkCreator}\r\n        unFollowThunkCreator={props.unFollowThunkCreator}\r\n    />)\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            <div>\r\n                {users}\r\n            </div>\r\n            <Paginator\r\n                pageSize={props.pageSize}\r\n                totalCount={props.totalCount}\r\n                getUsers={props.getUsers}\r\n                pageCount={props.pageCount}\r\n                removeUsers={props.removeUsers}\r\n                />\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    pageSizeAC,\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unFollowThunkCreator,\r\n    removeUsersThunkCreator,\r\n    pageCountAC\r\n    \r\n} from '../../redux/usersReducer'\r\nimport { compose } from 'redux';\r\nimport { LoggedInRedirect } from '../../hoc/LoggedInRedirect'\r\nimport {\r\n    getUsersSuper,\r\n    usersSelectors\r\n} from '../../redux/selectors'\r\n\r\nclass UsersInnerContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.pageSize, this.props.pageCount)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeUsersThunkCreator() \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.users.length) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <>\r\n                <Users\r\n                    users={this.props.users}\r\n                    addPageSize={this.props.pageSizeAC}\r\n                    pageSize={this.props.pageSize}\r\n                    totalCount={this.props.totalCount}\r\n                    setUsers={this.props.setUsers}\r\n                    addUsers={this.addUsers}\r\n                    followingProgress={this.props.followingProgress}\r\n                    followThunkCreator={this.props.followThunkCreator}\r\n                    unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                    getUsers={this.props.getUsersThunkCreator}\r\n                    removeUsers={this.props.removeUsersThunkCreator}\r\n                    pageCount={this.props.pageCount}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: usersSelectors.getPageSize(state),\r\n        pageCount: usersSelectors.getPageCount(state),\r\n        totalCount: usersSelectors.getTotalCount(state),\r\n        isFetching: usersSelectors.getIsFetching(state),\r\n        followingProgress: usersSelectors.getFollowingProgrress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        pageSizeAC,\r\n        getUsersThunkCreator,\r\n        removeUsersThunkCreator,\r\n        followThunkCreator,\r\n        unFollowThunkCreator,\r\n        pageCountAC,\r\n    }),\r\n    LoggedInRedirect\r\n)(UsersInnerContainer) ","import React from 'react' \r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={classes.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react' \r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikCheckbox = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value.includes(option.value)} />\r\n                                        <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikCheckbox","import React from 'react'\r\nimport DateView from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikDatePicker = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({ form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        return <DateView\r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)} />\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikDatePicker","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst Input = (props) => {\r\n    return <div className={classes.formControl}>\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <div>\r\n            <Field className={props.className} id={props.name} name={props.name} type={props.type}/>\r\n            <ErrorMessage name={props.name} component={TextError} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst FormikInput = (props) => {\r\n    \r\n    const { label, name, email, password, touchedEmail, touchedPassword, type } = props\r\n\r\n    return (\r\n        <>\r\n            {touchedEmail && !email  || touchedPassword && !password  ?\r\n                <Input className={classes.alert} name={name} label={label} type={type}/> :\r\n                <Input className={null} name={name} label={label} type={type}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormikInput","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikRadioButtons = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <label htmlFor={name}>{label}</label>\r\n            <div></div>\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        console.log('field',field)\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value === option.value} />\r\n                                        <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikRadioButtons","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikSelect = (props) => {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='select' id={name} name={name} {...rest}>\r\n                {\r\n                    options.map(option => {\r\n                        return <option key={option.value} value={option.value}>\r\n                            {option.key}\r\n                        </option>\r\n                    })\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikSelect","import React from 'react' \r\nimport { Field, ErrorMessage} from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikTextArea = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='textarea' id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikTextArea","import React from 'react'\r\nimport FormikCheckbox from './FormikCheckbox'\r\nimport FormikDatePicker from './FormikDatePicker'\r\nimport FormikInput from './FormikInput'\r\nimport FormikRadioButtons from './FormikRadioButtons'\r\nimport FormikSelect from './FormikSelect'\r\nimport FormikTextArea from './FormikTextArea'\r\n\r\nconst FormikControl = (props) => {\r\n    const { control, ...rest } = props\r\n    switch (control) {\r\n        case 'input': return <FormikInput {...rest} />\r\n        case 'textarea': return <FormikTextArea {...rest} />\r\n        case 'select': return <FormikSelect {...rest} />\r\n        case 'radio': return <FormikRadioButtons {...rest} />\r\n        case 'checkbox': return <FormikCheckbox {...rest} /> \r\n        case 'date': return <FormikDatePicker {...rest} />\r\n        default: return null\r\n    }\r\n}\r\n\r\nexport default FormikControl","import React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from '../Common/FormControls/FormikControl'\r\nimport { login } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const {login, isLoggedIn, captchaImg} = props\r\n\r\n    const radioOptions = [\r\n        { key: 'Remember me', value: 'rememerMe' }\r\n    ]\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: radioOptions,\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        login( values.email, values.password, false)\r\n    }\r\n\r\n    if (isLoggedIn) { return <Redirect to={'/Profile'} /> } // Проверяем, если мы залогинены, то редиректим на профиль\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return <Form>\r\n                        <h1>Login</h1>\r\n                        <FormikControl\r\n                            email={formik.values.email}\r\n                            touchedEmail={formik.touched.email}\r\n                            control='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            name='email' />\r\n                        <FormikControl\r\n                            password={formik.values.password}\r\n                            touchedPassword={formik.touched.password}\r\n                            control='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            name='password' />\r\n                        <FormikControl\r\n                            control='checkbox'\r\n                            label='Remember me'\r\n                            name='rememberMe'\r\n                            options={radioOptions} />\r\n                        <p></p>\r\n                        <button type='submit' disabled={!formik.isValid}>Login</button>\r\n                        {!captchaImg ?\r\n                            null\r\n                            : <div>\r\n                                <p></p>\r\n                                <img src={captchaImg} alt=\"captcha\" />\r\n                            </div>\r\n                        }\r\n                    </Form>\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\nexport let mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        captchaImg: state.authReducer.captchaImg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(LoginForm)","import React from 'react'\r\nimport Preloader from '../components/Common/Preloader/Preloader'\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </React.Suspense> \r\n    }\r\n}\r\n\r\n","import React from 'react'\nimport './App.css'\nimport { Route, withRouter, HashRouter } from 'react-router-dom';\nimport { connect, Provider } from 'react-redux'\nimport { initializeApp } from './redux/appReducer'\nimport { compose } from 'redux';\nimport store from './redux/reduxStore'\nimport Nav from './components/Navbar/Nav';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport UsersInnerContainer from './components/Users/UsersInnerContainer';\nimport LoginForm from './components/Login/LoginForm';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { WithSuspense } from './hoc/WithSuspense';\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\nconst ProfileContainer = React.lazy(() => import('./components/NewProfile/ProfileContainer'))\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <>\n        <div className='app-wrapper'>\n          <HeaderContainer />\n          <Nav />\n          <div className='app-wrapper-content'>\n            <Route path='/Dialogs' render={WithSuspense(Dialogs)}/>\n            <Route path='/Profile/:userId?' render={WithSuspense(ProfileContainer)}/>\n            <Route path='/Users/:userId' render={WithSuspense(ProfileContainer)} />\n            <Route exact path='/Users' render={() => <UsersInnerContainer />} />\n            <Route path='/Music' render={() => <Music />} />\n            <Route path='/Settings' render={() => <Settings />} />\n            <Route path='/Login' render={() => <LoginForm />} />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized\n})\n\nlet AppWithRouter = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nlet MainApp = (props) => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppWithRouter />\n    </Provider>\n  </HashRouter>\n}\n\nexport default MainApp\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n \n\nexport let rerenderEntireTree = () => {\n  ReactDOM.render( <MainApp />,\n    document.getElementById('root')\n  );\n}\nrerenderEntireTree(store)\nwindow.store = store\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Kdvq\",\"logoBlock\":\"User_logoBlock__xhS7H\",\"infoBlock\":\"User_infoBlock__3O4VD\",\"name\":\"User_name__3sCD6\",\"status\":\"User_status__1ssRJ\",\"city\":\"User_city__1xMuO\",\"country\":\"User_country__1_5tH\"};","import { createSelector } from 'reselect'\r\n\r\nexport const usersSelectors = {\r\n    getAllUsers(state) {\r\n        return state.usersReducer.users\r\n    },\r\n    getPageSize(state) {\r\n        return state.usersReducer.pageSize \r\n    },\r\n    getPageCount(state) {\r\n        return state.usersReducer.pageCount\r\n    },\r\n    getTotalCount(state) {\r\n        return state.usersReducer.totalCount\r\n    },\r\n    getIsFetching(state) {\r\n        return state.usersReducer.isFetching \r\n    },\r\n    getFollowingProgrress(state) {\r\n        return state.usersReducer.followingProgress\r\n    },\r\n    getAllUsersSelector(state) {\r\n        return this.getAllUsers(state).filter(user => true) \r\n    },\r\n}\r\n\r\nexport const getUsersSuper = createSelector(usersSelectors.getAllUsers, (users) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const postsSelectors = {\r\n    getPosts(state) {\r\n        return state.profileReducer.posts\r\n    },\r\n    getProfile(state) {\r\n        return state.profileReducer.profile\r\n    },\r\n    getNewPostsText(state) {\r\n        return state.profileReducer.newPostText\r\n    },\r\n    getLogin(state) {\r\n        return state.authReducer.login\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/loaderSVG.2997ce57.svg\";","import React from 'react'\r\nimport preloader from '../../../assets/loaderSVG.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.preloaderContainer}>\r\n            <img className={classes.preloader} src={preloader} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"PageButton_buttonsContainer__135jv\",\"checkedButton\":\"PageButton_checkedButton__2t6J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eA5PG\",\"logo\":\"Header_logo__30lpE\",\"login\":\"Header_login__2clXM\"};"],"sourceRoot":""}