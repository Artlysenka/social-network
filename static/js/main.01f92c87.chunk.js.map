{"version":3,"sources":["components/Common/Preloader/Preloader.module.css","redux/dialogsReducer.js","components/Music/Music.module.css","components/Users/Users.module.css","components/Login/LoginForm.module.css","API/api.js","redux/authReducer.js","components/Navbar/Nav.module.css","components/Common/FormControls/Login.module.css","reportWebVitals.js","redux/friendsReducer.js","redux/usersReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Navbar/Nav.jsx","components/Music/Music.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Users/Paginator/PageButton.jsx","components/Users/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersInnerContainer.jsx","components/Common/FormControls/TextError.jsx","components/Common/FormControls/FormikCheckbox.jsx","components/Common/FormControls/FormikDatePicker.jsx","components/Common/FormControls/FormikInput.jsx","components/Common/FormControls/FormikRadioButtons.jsx","components/Common/FormControls/FormikSelect.jsx","components/Common/FormControls/FormikTextArea.jsx","components/Common/FormControls/FormikControl.jsx","components/Login/LoginForm.jsx","hoc/WithSuspense.js","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","App.js","index.js","components/Users/User/User.module.css","redux/selectors.js","components/Header/Header.module.css","redux/profileReducer.js","assets/loaderSVG.svg","components/Common/Preloader/Preloader.jsx","assets/defaultAvatar.png","hoc/LoggedInRedirect.js","redux/headerRecuder.js","components/Users/Paginator/PageButton.module.css"],"names":["module","exports","POST_NEW_TEXT","initialState","dialogsData","messagesData","dialogsReducer","state","action","type","newDialog","id","name","newPostItem","message","postText","postNewTextActionCreator","instance","axios","create","withCredentials","baseURL","headers","getUsers","pageSize","pageCount","get","then","res","data","getUserProfile","userId","sendUserStatus","status","put","getUserStatus","sendUserPhoto","file","formData","FormData","append","sendUserProfileSettings","settings","a","console","log","follow","post","unFollow","delete","logInProfile","loginMe","email","password","rememberMe","captcha","logOutMe","getCaptcha","SET_USER_DATA","LOGGED_IN_TOGGLE","LOGGED_IN_FETCHING","CAPTCHA","login","isLoggedIn","isFetching","confirmation","captchaImg","authReducer","setUserDataAC","LoggedInTogglegAC","LoggedInFetchingAC","logInUserThunkCreator","dispatch","resultCode","getCaptchaThunk","logOut","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friends","friendsReducer","stateCopy","FOLLOW","UNFOLLOW","SET_USERS","PAGE_SIZE","TOGGLE_PRELOADER","TOGGLE_FOLLOWING_PROGRESS","PAGE_COUNT","TOTAL_COUNT","users","totalCount","followingProgress","followAC","unfollowAC","setUsersAC","pageCountAC","toggleFollowingProgressAC","INITIALIZED_SUCCSESS","initialized","reducers","combineReducers","profileReducer","usersReducer","map","user","followed","filter","appReducer","headerReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Nav","props","className","classes","nav","item","to","activeClassName","active","Music","contentColor","Header","hideUserSettingsContainer","event","document","getElementById","style","display","header","onMouseOver","onMouseOut","userInfo","userLogin","userAvatar","src","userProfilePhoto","defaultAvatar","alt","profileSettings","onClick","HeaderContainer","this","getUserProfilePhotoThunk","React","Component","withRouter","connect","PageButton","switchPage","removeUsers","button","checkedButton","Paginator","useState","initialPage","setInitialPage","numberOfShowedButtons","decrementNumber","setDecrementNumber","incrementNumber","numberOfPageButtons","Math","ceil","buttons","buttonsInitializeArray","i","push","createButtonsArray","buttonsContainer","User","photo","unFollowThunkCreator","followThunkCreator","logoBlock","disabled","some","infoBlock","country","city","Users","photos","small","UsersInnerContainer","getUsersThunkCreator","removeUsersThunkCreator","length","addPageSize","pageSizeAC","setUsers","addUsers","Preloader","getUsersSuper","usersSelectors","getPageSize","getPageCount","getTotalCount","getIsFetching","getFollowingProgrress","items","LoggedInRedirect","TextError","error","children","FormikCheckbox","options","label","rest","field","option","Fragment","htmlFor","value","key","checked","component","FormikDatePicker","formControl","form","setFieldValue","selected","onChange","val","Input","autocomplete","FormikInput","touchedEmail","touchedPassword","cn","alert","FormikRadioButtons","FormikSelect","as","FormikTextArea","FormikControl","control","validationSchema","Yup","required","initialValues","onSubmit","values","formik","touched","isValid","WithSuspense","Suspense","fallback","Settings","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","shape","sendProfileSettings","validateOnChange","isSubmitting","SettingsContainer","getUserProfileThunkCreator","removeUserProfileThunkCreator","updateUserProfileSettings","Dialogs","lazy","ProfileContainer","App","initializeApp","path","render","exact","AppWithRouter","logInUserPromise","Promise","all","MainApp","basename","process","rerenderEntireTree","ReactDOM","getAllUsers","getAllUsersSelector","createSelector","postsSelectors","getPosts","posts","getProfile","getNewPostsText","newPostText","getLogin","SET_USER_PROFILE","APDATE_USER_STATUS","ADD_NEW_POST","UPDATE_POST_TEXT","DELETE_POST","UPDATE_USER_PHOTO","LOADING_NEW_PROFILE_PHOTO","userStatus","loadingPhoto","newPost","userAva","userName","likesCount","postId","setUserProfile","updateUserStatusAC","addNewPostAC","UserId","getUserStatusThunkCreator","updateUserStatusThunkCreator","uploadUserProfilePhotoThunkCreator","addNewPostThunkCreator","loadingPhotoThunk","preloaderContainer","preloader","RedirectedComponent","SET_USER_PROFILE_PHOTO"],"mappings":"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","file":"static/js/main.01f92c87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__2qmHb\",\"preloader\":\"Preloader_preloader__3nzjs\"};","const POST_NEW_TEXT = 'POST_NEW_TEXT'\r\n\r\nlet initialState = {\r\n    dialogsData: [],\r\n    messagesData: [],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case POST_NEW_TEXT:\r\n            let newDialog = {\r\n                id: 4,\r\n                name: 'Tema'\r\n            }\r\n            let newPostItem = {\r\n                id: 4,\r\n                message: action.postText,\r\n            }\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newDialog],\r\n                messagesData: [...state.messagesData, newPostItem],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postNewTextActionCreator = (postText) => {\r\n    return {\r\n        type: POST_NEW_TEXT,\r\n        postText: postText\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Music_contentColor__3tC_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Users_contentColor__2Kips\",\"addUsersButtonContainer\":\"Users_addUsersButtonContainer__3tC_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaImg\":\"LoginForm_captchaImg__1M2-6\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-Key': '0956be17-9287-4aaa-8ddc-9d18425e88b9',\r\n    }\r\n})\r\n\r\nexport const getUsers = (pageSize, pageCount) => {\r\n    return instance.get('users?page=' + pageCount + '&count=' + pageSize, {}).then(res => res.data)\r\n} // Получаем с сервера объект с пользователями \r\n\r\nexport const getUserProfile = (userId) => {\r\n    return instance.get('profile/' + userId, {})\r\n} // Получаем с сервера профиль пользователя согласно id выбранного пользователя\r\n\r\nexport const sendUserStatus = (status) => {\r\n    return instance.put('profile/status/', { status: status })\r\n} // Отправляем на сервер новый статус пользователя\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return instance.get('profile/status/' + userId, {})\r\n} // Получаем с сервера статус профиля пользователя\r\n\r\nexport const sendUserPhoto = (file) => {\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    return instance.put('profile/photo/', formData, { \r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n     })\r\n} // отправляем на сервер новое фото пользователя\r\n\r\nexport const sendUserProfileSettings = async (settings) => {\r\n    try {\r\n        const res = await instance.put('profile', settings)\r\n        return res\r\n    } catch(e) {\r\n        console.log(e)\r\n    } finally {\r\n        console.log('finally')\r\n    }\r\n    \r\n} // Отправляем на сервер новые настройки профиля пользователя \r\n\r\nexport const follow = (userId) => {\r\n    return instance.post('follow/' + userId, {}, {})\r\n} // Отправляем запрос на подписку на пользователя\r\n\r\nexport const unFollow = (userId) => {\r\n    return instance.delete('follow/' + userId, {}, {})\r\n} // Отправляем запрос на отписку от пользвателя\r\n\r\nexport const logInProfile = () => {\r\n    return instance.get('auth/me')\r\n} // Отпраялем запрос на проверку верификации профиля\r\n\r\nexport const loginMe = (email, password, rememberMe = true, captcha) => {\r\n    return instance.post('auth/login', { email, password, rememberMe, captcha })\r\n} // Логинимся в приложение\r\n\r\nexport const logOutMe = () => {\r\n    return instance.delete('auth/login')\r\n} // Выходим из приложения\r\n\r\nexport const getCaptcha = () => {\r\n    return instance.get('security/get-captcha-url')\r\n} // Отправляем запрос на капчу","import { loginMe, logInProfile, getCaptcha, logOutMe } from '../API/api'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst LOGGED_IN_TOGGLE = 'LOGGED_IN_TOGGLE'\r\nconst LOGGED_IN_FETCHING = 'LOGGED_IN_FETCHING'\r\nconst CAPTCHA = 'CAPTCHA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    confirmation: false,\r\n    captchaImg: '',\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case LOGGED_IN_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        case LOGGED_IN_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n                confirmation: action.confirmation\r\n            }\r\n        case CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaImg: action.captchaImg\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataAC = (userId, email, login, isLoggedIn) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { userId, email, login, isLoggedIn: isLoggedIn },\r\n    }\r\n}\r\n\r\nexport const LoggedInTogglegAC = (isLoggedIn) => {\r\n    return {\r\n        type: LOGGED_IN_TOGGLE,\r\n        isLoggedIn: isLoggedIn\r\n    }\r\n}\r\n\r\nexport const LoggedInFetchingAC = (isFetching, confirmation) => {\r\n    return {\r\n        type: LOGGED_IN_FETCHING,\r\n        isFetching: isFetching,\r\n        confirmation: confirmation\r\n    }\r\n}\r\n\r\nexport const captcha = (captchaImg) => ({\r\n    type: CAPTCHA,\r\n    captchaImg: captchaImg\r\n})\r\n\r\nexport const logInUserThunkCreator = () => async (dispatch) => {\r\n    dispatch(LoggedInFetchingAC(true, false))\r\n    const res = await logInProfile()\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data\r\n        dispatch(setUserDataAC(id, email, login, true))\r\n    }\r\n    dispatch(LoggedInFetchingAC(false, true))\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) =>\r\n    async (dispatch) => {\r\n        const res = await loginMe(email, password, rememberMe, captcha)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(logInUserThunkCreator())\r\n        }\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaThunk())\r\n        }\r\n    }\r\n\r\n\r\nexport const logOut = () =>\r\n    async (dispatch) => {\r\n        const res = await logOutMe()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserDataAC(null, null, null, false))\r\n        }\r\n    }\r\n\r\n\r\nexport const getCaptchaThunk = () =>\r\n    async (dispatch) => {\r\n        const res = await getCaptcha()\r\n        dispatch(captcha(res.data.url))\r\n    }\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3jRL3\",\"item\":\"Nav_item__3Mn2D\",\"active\":\"Nav_active__10tEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3P2GR\",\"formControl\":\"Login_formControl__2h8Kz\",\"alert\":\"Login_alert__3TE9q\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    friends: [\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state}\r\n    return stateCopy\r\n}\r\nexport default friendsReducer","import { follow, unFollow, getUsers } from '../API/api'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst PAGE_SIZE = 'PAGE_SIZE'\r\nconst TOGGLE_PRELOADER = 'TOGGLE_PRELOADER'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\nconst PAGE_COUNT = 'PAGE_COUNT'\r\nconst TOTAL_COUNT = 'TOTAL_COUNT'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    pageCount: 1,\r\n    totalCount: null,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case PAGE_SIZE:\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        case PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.pageCount\r\n            }\r\n        case TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.followingProgress ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\r\n\r\nexport const pageSizeAC = (pageSize) => ({ type: PAGE_SIZE, pageSize })\r\n\r\nexport const pageCountAC = (pageCount) => ({ type: PAGE_COUNT, pageCount })\r\n\r\nexport const totalCountAR = (totalCount) => ({ type: TOTAL_COUNT, totalCount })\r\n\r\nexport const togglePreloaderAC = (isFetching) => ({ type: TOGGLE_PRELOADER, isFetching })\r\n\r\nexport const toggleFollowingProgressAC = (followingProgress, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, followingProgress, userId })\r\n\r\nexport const getUsersThunkCreator = (pageSize, pageCount) =>\r\n    async (dispatch) => {\r\n        dispatch(pageCountAC(pageCount))\r\n        const res = await getUsers(pageSize, pageCount)\r\n        dispatch(setUsersAC(res.items))\r\n        dispatch(totalCountAR(res.totalCount))\r\n    }\r\n\r\n\r\nexport const removeUsersThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUsersAC([]))\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId) =>\r\n\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await follow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(followAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\nexport const unFollowThunkCreator = (userId) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await unFollow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(unfollowAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { logInUserThunkCreator } from \"./authReducer\"\r\n\r\nconst INITIALIZED_SUCCSESS = 'INITIALIZED_SUCCSESS'\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCSESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccsess = () => ({ type: INITIALIZED_SUCCSESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let logInUserPromise = dispatch(logInUserThunkCreator())\r\n    Promise.all([logInUserPromise]).then(() => {\r\n        dispatch(initializeSuccsess())\r\n    })\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\r\nimport { profileReducer } from './profileReducer'\r\nimport { dialogsReducer } from './dialogsReducer'\r\nimport { friendsReducer } from './friendsReducer'\r\nimport { usersReducer } from './usersReducer'\r\nimport { authReducer } from './authReducer'\r\nimport { appReducer } from './appReducer'\r\nimport { headerReducer } from './headerRecuder'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    friendsReducer,\r\n    usersReducer,\r\n    authReducer,\r\n    appReducer,\r\n    headerReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\r\nimport classes from './Nav.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Nav = function (props) {\r\n  return (\r\n    \r\n    <div className={classes.nav}>\r\n      \r\n      <nav >\r\n        <div className={classes.item}>\r\n          <NavLink to='/Profile/' activeClassName={classes.active}>My Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Dialogs' activeClassName={classes.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Users' activeClassName={classes.active}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Music' activeClassName={classes.active}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Settings' activeClassName={classes.active}>Settings</NavLink>\r\n        </div>\r\n      </nav>\r\n        \r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Nav ","import React from 'react'\r\nimport classes from './Music.module.css'\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={classes.contentColor}>\r\n            <h1>\r\n                Music\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport defaultAvatar from '../../assets/defaultAvatar.png'\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    const logout = () => {\r\n        props.logOut()\r\n    }\r\n\r\n    const showUserSettingsContainer = (event) => {\r\n        let userSettings = document.getElementById('profileSettings')\r\n        userSettings.style.display = 'block';\r\n    }\r\n    const hideUserSettingsContainer = (event) => {\r\n        let userSettings = document.getElementById('profileSettings')\r\n        userSettings.style.display = 'none';\r\n    }\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.login}>\r\n                {props.isLoggedIn ?\r\n                    <div\r\n                        onMouseOver={showUserSettingsContainer}\r\n                        onMouseOut={hideUserSettingsContainer}>\r\n\r\n                        <div\r\n                            className={classes.userInfo}>\r\n                            <div className={classes.userLogin}>\r\n                                <div><span>{props.login}</span></div>\r\n                            </div>\r\n                            <NavLink to='/Profile'>\r\n                                <div className={classes.userAvatar}>\r\n                                    <img src={props.userProfilePhoto || defaultAvatar} alt=\"User avatar\" />\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div id='profileSettings' className={classes.profileSettings}>\r\n                            <div>\r\n                                <button onClick={logout}>Log out</button>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/Settings'>\r\n                                    <button onClick={hideUserSettingsContainer} >\r\n                                        Profile settings\r\n                                </button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : <NavLink to='/Login'> <button>Login</button></NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport { logOut } from '../../redux/authReducer'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport axios from 'axios'\r\nimport { getUserProfilePhotoThunk } from '../../redux/headerRecuder';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.props = props\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.props.getUserProfilePhotoThunk(this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.authReducer.isLoggedIn,\r\n    login: state.authReducer.login,\r\n    isFetching: state.authReducer.isFetching,\r\n    userId: state.authReducer.userId,\r\n    userProfilePhoto: state.headerReducer.userProfilePhoto\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { logOut, getUserProfilePhotoThunk })\r\n)(HeaderContainer) ","import React from 'react'\r\nimport classes from './PageButton.module.css'\r\n\r\n\r\nconst PageButton = (props) => {\r\n    const switchPage = () => {\r\n        props.removeUsers()\r\n        props.getUsers(props.pageSize, props.button)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.button === props.pageCount\r\n                ? <div>\r\n                    <button className={classes.checkedButton} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n                : <div>\r\n                    <button key={props.button} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PageButton","import React, { useState } from 'react'\r\nimport PageButton from './PageButton'\r\nimport classes from './PageButton.module.css'\r\n\r\nconst Paginator = (props) => {\r\n\r\n    const buttonsPortion = 5\r\n    let touchedDecrementButton = false\r\n    const [initialPage, setInitialPage] = useState(props.pageCount)\r\n    const [numberOfShowedButtons] = useState(7)\r\n    const [decrementNumber, setDecrementNumber] = useState(buttonsPortion)\r\n    const [incrementNumber, setIncrementNumber] = useState(buttonsPortion)\r\n    const numberOfPageButtons = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n\r\n    const incrementInitialPage = () => {\r\n        setInitialPage(initialPage + incrementNumber)\r\n    }\r\n\r\n    const decrementInitialPage = () => {\r\n        setInitialPage(initialPage - decrementNumber)\r\n        touchedDecrementButton = true\r\n        if (touchedDecrementButton && decrementNumber !== buttonsPortion) setDecrementNumber(buttonsPortion)\r\n\r\n    }\r\n\r\n    const createButtonsArray = () => {\r\n        let buttonsInitializeArray = []\r\n        for (let i = initialPage; i < numberOfPageButtons + 1; i++) {\r\n            buttonsInitializeArray.push(i)\r\n        }\r\n\r\n        if (initialPage === 1) {\r\n            return buttonsInitializeArray\r\n        }\r\n        else if (initialPage - decrementNumber < 0) {\r\n            setDecrementNumber((decrementNumber - 1) + (initialPage - decrementNumber))\r\n        }\r\n\r\n        return buttonsInitializeArray\r\n    }\r\n\r\n    let buttons = createButtonsArray().map(function (button) {\r\n        if (button > initialPage + numberOfShowedButtons - 1) {\r\n            return\r\n        }\r\n        return <PageButton\r\n            button={button}\r\n            pageSize={props.pageSize}\r\n            getUsers={props.getUsers}\r\n            pageCount={props.pageCount}\r\n            totalCount={props.totalCount}\r\n            removeUsers={props.removeUsers}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className={classes.buttonsContainer}>\r\n            {initialPage === 1\r\n                ? null\r\n                : <div>\r\n                    <button onClick={decrementInitialPage}>назад</button>\r\n                </div>}\r\n            {buttons}\r\n            {numberOfPageButtons - incrementNumber <= initialPage\r\n                ? null\r\n                : <div>\r\n                    <button onClick={incrementInitialPage}>Вперед</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport classes from './User.module.css'\r\nimport defaultAvatar from '../../../assets/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    const {\r\n        id,\r\n        photo,\r\n        followed,\r\n        followingProgress,\r\n        unFollowThunkCreator,\r\n        followThunkCreator,\r\n        name,\r\n        status\r\n    } = props\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div className={classes.logoBlock}>\r\n                <div>\r\n                    <NavLink to={'/Users/' + id} >\r\n                        <img src={photo == null ? defaultAvatar : photo} alt=\"UserPhoto\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {followed\r\n                        ? <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            unFollowThunkCreator(id)\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            followThunkCreator(id)\r\n                        }}>Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={classes.infoBlock}>\r\n                <div className={classes.name}>{name}</div>\r\n                <div className={classes.status}>{status}</div>\r\n                <div className={classes.country}>Belarus<i>(hardcode)</i>,</div>\r\n                <div className={classes.city}>Bralaw<i>(hardcode)</i></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport Paginator from './Paginator/Paginator'\r\nimport User from './User/User'\r\nimport classes from './Users.module.css'\r\n\r\nconst Users = (props) => {\r\n    let users = props.users.map(user => <User\r\n        key={user.id}\r\n        id={user.id}\r\n        name={user.name}\r\n        status={user.status}\r\n        photo={user.photos.small}\r\n        followed={user.followed}\r\n        followingProgress={props.followingProgress}\r\n        followThunkCreator={props.followThunkCreator}\r\n        unFollowThunkCreator={props.unFollowThunkCreator}\r\n    />)\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            <div>\r\n                {users}\r\n            </div>\r\n            <Paginator\r\n                pageSize={props.pageSize}\r\n                totalCount={props.totalCount}\r\n                getUsers={props.getUsers}\r\n                pageCount={props.pageCount}\r\n                removeUsers={props.removeUsers}\r\n                />\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    pageSizeAC,\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unFollowThunkCreator,\r\n    removeUsersThunkCreator,\r\n    pageCountAC\r\n    \r\n} from '../../redux/usersReducer'\r\nimport { compose } from 'redux';\r\nimport { LoggedInRedirect } from '../../hoc/LoggedInRedirect'\r\nimport {\r\n    getUsersSuper,\r\n    usersSelectors\r\n} from '../../redux/selectors'\r\n\r\nclass UsersInnerContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.pageSize, this.props.pageCount)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeUsersThunkCreator() \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.users.length) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <>\r\n                <Users\r\n                    users={this.props.users}\r\n                    addPageSize={this.props.pageSizeAC}\r\n                    pageSize={this.props.pageSize}\r\n                    totalCount={this.props.totalCount}\r\n                    setUsers={this.props.setUsers}\r\n                    addUsers={this.addUsers}\r\n                    followingProgress={this.props.followingProgress}\r\n                    followThunkCreator={this.props.followThunkCreator}\r\n                    unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                    getUsers={this.props.getUsersThunkCreator}\r\n                    removeUsers={this.props.removeUsersThunkCreator}\r\n                    pageCount={this.props.pageCount}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: usersSelectors.getPageSize(state),\r\n        pageCount: usersSelectors.getPageCount(state),\r\n        totalCount: usersSelectors.getTotalCount(state),\r\n        isFetching: usersSelectors.getIsFetching(state),\r\n        followingProgress: usersSelectors.getFollowingProgrress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        pageSizeAC,\r\n        getUsersThunkCreator,\r\n        removeUsersThunkCreator,\r\n        followThunkCreator,\r\n        unFollowThunkCreator,\r\n        pageCountAC,\r\n    }),\r\n    LoggedInRedirect\r\n)(UsersInnerContainer) ","import React from 'react' \r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={classes.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react' \r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikCheckbox = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <div>\r\n                                    <label htmlFor={option.value}>{option.key}</label>\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value.length === 2} />\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikCheckbox","import React from 'react'\r\nimport DateView from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikDatePicker = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({ form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        return <DateView\r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)} />\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikDatePicker","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Input = (props) => {\r\n    return <div className={classes.formControl}>\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <div>\r\n            <Field\r\n                className={props.className}\r\n                id={props.name}\r\n                name={props.name}\r\n                type={props.type}\r\n                autocomplete={props.autocomplete} />\r\n            <ErrorMessage name={props.name} component={TextError} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst FormikInput = (props) => {\r\n    const {\r\n        label,\r\n        name,\r\n        email,\r\n        password,\r\n        touchedEmail,\r\n        touchedPassword,\r\n        type\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <Input className={cn({\r\n                [classes.alert]: touchedEmail && !email || touchedPassword && !password\r\n            })}\r\n                name={name}\r\n                label={label}\r\n                type={type} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormikInput","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikRadioButtons = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <label htmlFor={name}>{label}</label>\r\n            <div></div>\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        console.log('field',field)\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value === option.value} />\r\n                                        <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikRadioButtons","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikSelect = (props) => {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='select' id={name} name={name} {...rest}>\r\n                {\r\n                    options.map(option => {\r\n                        return <option key={option.value} value={option.value}>\r\n                            {option.key}\r\n                        </option>\r\n                    })\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikSelect","import React from 'react' \r\nimport { Field, ErrorMessage} from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikTextArea = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='textarea' id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikTextArea","import React from 'react'\r\nimport FormikCheckbox from './FormikCheckbox'\r\nimport FormikDatePicker from './FormikDatePicker'\r\nimport FormikInput from './FormikInput'\r\nimport FormikRadioButtons from './FormikRadioButtons'\r\nimport FormikSelect from './FormikSelect'\r\nimport FormikTextArea from './FormikTextArea'\r\n\r\nconst FormikControl = (props) => {\r\n    const { control, ...rest } = props\r\n    switch (control) {\r\n        case 'input': return <FormikInput {...rest} />\r\n        case 'textarea': return <FormikTextArea {...rest} />\r\n        case 'select': return <FormikSelect {...rest} />\r\n        case 'radio': return <FormikRadioButtons {...rest} />\r\n        case 'checkbox': return <FormikCheckbox {...rest} /> \r\n        case 'date': return <FormikDatePicker {...rest} />\r\n        default: return null\r\n    }\r\n}\r\n\r\nexport default FormikControl","import React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport FormikControl from '../Common/FormControls/FormikControl'\r\nimport * as Yup from 'yup'\r\nimport { login } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport classes from './LoginForm.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const { login, isLoggedIn, captchaImg } = props\r\n\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: true,\r\n        captcha: '',\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Enter email'),\r\n        password: Yup.string().required('Enter password'),\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        login(values.email, values.password, values.rememberMe, values.captcha)\r\n    }\r\n\r\n    if (isLoggedIn) { return <Redirect to={'/Profile'} /> } // Проверяем, если мы залогинены, то редиректим на профиль\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return <Form>\r\n                        <h1>Login</h1>\r\n                        <FormikControl\r\n                            email={formik.values.email}\r\n                            touchedEmail={formik.touched.email}\r\n                            control='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            name='email' />\r\n                        <FormikControl\r\n                            password={formik.values.password}\r\n                            touchedPassword={formik.touched.password}\r\n                            control='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            name='password'\r\n                        />\r\n                        <p></p>\r\n                        <input type='submit' disabled={!formik.isValid} value={'Login'} />\r\n                        {!captchaImg ?\r\n                            null\r\n                            : <div className={classes.captchaImg}>\r\n                                <p></p>\r\n                                <img src={captchaImg} alt=\"captcha\" />\r\n                                <FormikControl\r\n                                    control='input'\r\n                                    label='Enter your captcha'\r\n                                    name='captcha'\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </Form>\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\nexport let mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        captchaImg: state.authReducer.captchaImg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(LoginForm)","import React from 'react'\r\nimport Preloader from '../components/Common/Preloader/Preloader'\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </React.Suspense> \r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport FormikControl from '../Common/FormControls/FormikControl'\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst Settings = (props) => {\r\n    \r\n    const { fullName, aboutMe, lookingForAJob, lookingForAJobDescription } = props.profile\r\n    const { facebook, github, instagram, mainLink, twitter, vk, website, youtube } = props.profile.contacts\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        contacts: Yup.object().shape({\r\n            github: Yup.string().url('Invalid URL!'),\r\n            vk: Yup.string().url('Invalid URL!'),\r\n            facebook: Yup.string().url('Invalid URL!'),\r\n            instagram: Yup.string().url('Invalid URL!'),\r\n            twitter: Yup.string().url('Invalid URL!'),\r\n            website: Yup.string().url('Invalid URL!'),\r\n            youtube: Yup.string().url('Invalid URL!'),\r\n            mainLink: Yup.string().url('Invalid URL!')\r\n        })\r\n    })\r\n\r\n    const initialValues = {\r\n        fullName: fullName,\r\n        aboutMe: aboutMe,\r\n        lookingForAJob: lookingForAJob,\r\n        lookingForAJobDescription: lookingForAJobDescription,\r\n        contacts: {\r\n            github: github,\r\n            vk: vk,\r\n            facebook: facebook,\r\n            instagram: instagram,\r\n            twitter: twitter,\r\n            website: website,\r\n            youtube: youtube,\r\n            mainLink: mainLink,\r\n        },\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        console.log('Submitting')\r\n        async function sendProfileSettings() {\r\n            await props.sendProfileSettings(values)\r\n        }\r\n        return sendProfileSettings()\r\n    }\r\n\r\n    return (\r\n        \r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n                validateOnChange={false}\r\n                >\r\n                {\r\n                    formik => {\r\n                        \r\n                        return <Form>\r\n                            <h1>Profile settings</h1>\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Full Name'\r\n                                name='fullName'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='About me'\r\n                                name='aboutMe'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='My skills'\r\n                                name='lookingForAJobDescription'\r\n                            />\r\n                            <div>\r\n                                <p></p>\r\n                                <Field\r\n                                    type='checkbox'\r\n                                    name='lookingForAJob'\r\n                                />\r\n                                <label htmlFor=\"lookingForAJob\">Looking for a job</label>\r\n                            </div>\r\n                            <h3>\r\n                                Contacts\r\n                            </h3>\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Github'\r\n                                name='contacts.github'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='vk'\r\n                                name='contacts.vk'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Facebook'\r\n                                name='contacts.facebook'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Instagram'\r\n                                name='contacts.instagram'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Twitter'\r\n                                name='contacts.twitter'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Website'\r\n                                name='contacts.website'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Youtube'\r\n                                name='contacts.youtube'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Main link'\r\n                                name='contacts.mainLink'\r\n                            />\r\n                            <input type='submit' value='save' disabled={formik.isSubmitting}/>\r\n                        </Form>\r\n                    }\r\n                }\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport { updateUserProfileSettings, getUserProfileThunkCreator, removeUserProfileThunkCreator } from '../../redux/profileReducer'\r\nimport { connect } from \"react-redux\";\r\nimport Settings from './Settings';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { LoggedInRedirect } from '../../hoc/LoggedInRedirect';\r\n\r\n\r\nclass SettingsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUserProfileThunkCreator(this.props.userId)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeUserProfileThunkCreator()\r\n    }\r\n    render() {\r\n        return <>\r\n            {\r\n                !this.props.profile\r\n                    ? null\r\n                    : <Settings\r\n                        sendProfileSettings={this.props.updateUserProfileSettings}\r\n                        profile={this.props.profile}\r\n                    />\r\n            }\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    userId: state.authReducer.userId\r\n})\r\n\r\nexport default compose (\r\n    withRouter, \r\n    connect(mapStateToProps, { \r\n        updateUserProfileSettings, \r\n        getUserProfileThunkCreator, \r\n        removeUserProfileThunkCreator \r\n    }),\r\n    LoggedInRedirect\r\n) \r\n(SettingsContainer) ","import React from 'react'\nimport './App.css'\nimport { Route, withRouter, BrowserRouter } from 'react-router-dom';\nimport { connect, Provider } from 'react-redux'\nimport { initializeApp } from './redux/appReducer'\nimport { compose } from 'redux';\nimport store from './redux/reduxStore'\nimport Nav from './components/Navbar/Nav';\nimport Music from './components/Music/Music';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport UsersInnerContainer from './components/Users/UsersInnerContainer';\nimport LoginForm from './components/Login/LoginForm';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { WithSuspense } from './hoc/WithSuspense';\nimport SettingsContainer from './components/Settings/SettingsContainer';\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\nconst ProfileContainer = React.lazy(() => import('./components/NewProfile/ProfileContainer'))\n\nclass App extends React.Component {\n  \n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <>\n        <div className='app-wrapper'>\n          <HeaderContainer />\n          <Nav />\n          <div className='app-wrapper-content'>\n            <Route path='/Dialogs' render={WithSuspense(Dialogs)}/>\n            <Route path='/Profile/:userId?' render={WithSuspense(ProfileContainer)}/>\n            <Route path='/Users/:userId' render={WithSuspense(ProfileContainer)} />\n            <Route exact path='/Users' render={() => <UsersInnerContainer />} />\n            <Route path='/Music' render={() => <Music />} />\n            <Route path='/Settings' render={() => <SettingsContainer />} />\n            <Route path='/Login' render={() => <LoginForm />} />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized\n})\n\nlet AppWithRouter = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nlet MainApp = (props) => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppWithRouter />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n \n\nexport let rerenderEntireTree = () => {\n  ReactDOM.render( <MainApp />,\n    document.getElementById('root')\n  );\n}\nrerenderEntireTree(store)\nwindow.store = store\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Kdvq\",\"logoBlock\":\"User_logoBlock__xhS7H\",\"infoBlock\":\"User_infoBlock__3O4VD\",\"name\":\"User_name__3sCD6\",\"status\":\"User_status__1ssRJ\",\"city\":\"User_city__1xMuO\",\"country\":\"User_country__1_5tH\"};","import { createSelector } from 'reselect'\r\n\r\nexport const usersSelectors = {\r\n    getAllUsers(state) {\r\n        return state.usersReducer.users\r\n    },\r\n    getPageSize(state) {\r\n        return state.usersReducer.pageSize \r\n    },\r\n    getPageCount(state) {\r\n        return state.usersReducer.pageCount\r\n    },\r\n    getTotalCount(state) {\r\n        return state.usersReducer.totalCount\r\n    },\r\n    getIsFetching(state) {\r\n        return state.usersReducer.isFetching \r\n    },\r\n    getFollowingProgrress(state) {\r\n        return state.usersReducer.followingProgress\r\n    },\r\n    getAllUsersSelector(state) {\r\n        return this.getAllUsers(state).filter(user => true) \r\n    },\r\n}\r\n\r\nexport const getUsersSuper = createSelector(usersSelectors.getAllUsers, (users) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const postsSelectors = {\r\n    getPosts(state) {\r\n        return state.profileReducer.posts\r\n    },\r\n    getProfile(state) {\r\n        return state.profileReducer.profile\r\n    },\r\n    getNewPostsText(state) {\r\n        return state.profileReducer.newPostText\r\n    },\r\n    getLogin(state) {\r\n        return state.authReducer.login\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eA5PG\",\"login\":\"Header_login__2clXM\",\"userInfo\":\"Header_userInfo__UZJGJ\",\"userLogin\":\"Header_userLogin__1B_UB\",\"userAvatar\":\"Header_userAvatar__8bsmo\",\"profileSettings\":\"Header_profileSettings__3xpjx\"};","import {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    sendUserStatus,\r\n    sendUserPhoto,\r\n    sendUserProfileSettings\r\n} from '../API/api'\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst APDATE_USER_STATUS = 'APDATE_USER_STATUS'\r\nconst ADD_NEW_POST = 'ADD_NEW_POST'\r\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst UPDATE_USER_PHOTO = 'UPDATE_USER_PHOTO'\r\nconst LOADING_NEW_PROFILE_PHOTO = 'LOADING_NEW_PROFILE_PHOTO'\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    newPostText: '',\r\n    profile: null,\r\n    userStatus: null,\r\n    loadingPhoto: false\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case APDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            }\r\n        }\r\n        case UPDATE_USER_PHOTO: {\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                id: 1,\r\n                postText: action.postText,\r\n                userAva: null,\r\n                userName: action.login,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id != action.postId)\r\n            }\r\n        }\r\n        case LOADING_NEW_PROFILE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                loadingPhoto: !state.loadingPhoto\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nconst updateUserStatusAC = (userStatus) => ({ type: APDATE_USER_STATUS, userStatus: userStatus })\r\n\r\nconst updateUserPhotoAC = (photos) => ({ type: UPDATE_USER_PHOTO, photos })\r\n\r\nconst loadingPhotoAC = () => ({type: LOADING_NEW_PROFILE_PHOTO})\r\n\r\nexport const addNewPostAC = (postText, login) => ({ type: ADD_NEW_POST, postText, login })\r\n\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const getUserProfileThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserProfile(UserId)\r\n        dispatch(setUserProfile(res.data))\r\n    }\r\n// Делаем запрос на сервер за данными пользователя, и диспатчим данные в стор\r\n\r\nexport const removeUserProfileThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUserProfile(null))\r\n    }\r\n} // Удаляем из стора загруженный профиль\r\n\r\nexport const getUserStatusThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserStatus(UserId)\r\n        dispatch(updateUserStatusAC(res.data))\r\n    }\r\n// Делаем запрос на сервер и диспатчим статус пользователя\r\n\r\nexport const updateUserStatusThunkCreator = (status) =>\r\n    async (dispatch) => {\r\n        const res = await sendUserStatus(status)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(updateUserStatusAC(status))\r\n        }\r\n    }\r\n\r\nexport const updateUserProfileSettings = (settings) =>\r\n    async (dispatch) => {\r\n        const res = await sendUserProfileSettings(settings)\r\n    }\r\n\r\n\r\nexport const uploadUserProfilePhotoThunkCreator = (file) =>\r\n    async (dispatch) => {\r\n        const res = await sendUserPhoto(file)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(updateUserPhotoAC(res.data.data.photos))\r\n        }\r\n    }\r\n\r\nexport const addNewPostThunkCreator = (postText, login) => (dispatch) => {\r\n    dispatch(addNewPostAC(postText, login))\r\n}\r\n\r\nexport const loadingPhotoThunk = () => (dispatch) => {\r\n    dispatch(loadingPhotoAC())\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/loaderSVG.2997ce57.svg\";","import React from 'react'\r\nimport preloader from '../../../assets/loaderSVG.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.preloaderContainer}>\r\n            <img className={classes.preloader} src={preloader} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","export default __webpack_public_path__ + \"static/media/defaultAvatar.0334f4b4.png\";","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from 'react-redux'\r\nimport { LoggedInTogglegAC, LoggedInFetchingAC, logOut } from '../redux/authReducer'\r\n\r\nexport const LoggedInRedirect = (Component) => {\r\n    class RedirectedComponent extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n            this.props = props\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                 {!this.props.isLoggedIn && this.props.confirmation ? <Redirect to='/Login' /> : <></>}\r\n                 {this.props.isFetching && !this.props.isLoggedIn ? <></> : <Component {...this.props} />}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsLoggedInRedirect = (state) => ({\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        isFetching: state.authReducer.isFetching,\r\n        confirmation: state.authReducer.confirmation,\r\n    })\r\n    let LogInRedirectComponent = connect(mapStateToPropsLoggedInRedirect, {LoggedInTogglegAC, LoggedInFetchingAC, logOut})(RedirectedComponent)\r\n    return LogInRedirectComponent\r\n}\r\n\r\n","import {\r\n    getUserProfile,\r\n} from '../API/api'\r\n\r\nconst SET_USER_PROFILE_PHOTO = 'SET_USER_PROFILE_PHOTO';\r\n\r\nlet initialState = {\r\n    userProfilePhoto: ''\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE_PHOTO: {\r\n            return { ...state, userProfilePhoto: action.userProfilePhoto }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfilePhoto = (userProfilePhoto) => ({ type: SET_USER_PROFILE_PHOTO, userProfilePhoto })\r\n\r\n\r\nexport const getUserProfilePhotoThunk = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserProfile(UserId)\r\n        dispatch(setUserProfilePhoto(res.data.photos.small))\r\n    }\r\n// Делаем запрос на сервер за данными пользователя, и диспатчим данные в стор\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"PageButton_buttonsContainer__135jv\",\"checkedButton\":\"PageButton_checkedButton__2t6J4\"};"],"sourceRoot":""}