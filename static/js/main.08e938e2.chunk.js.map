{"version":3,"sources":["components/Common/Preloader/Preloader.module.css","assets/defaultAvatar.png","hoc/LoggedInRedirect.js","redux/dialogsReducer.js","components/Music/Music.module.css","components/Users/Users.module.css","API/api.js","components/Settings/Settings.module.css","redux/authReducer.js","components/Navbar/Nav.module.css","components/Common/FormControls/Login.module.css","reportWebVitals.js","redux/friendsReducer.js","redux/usersReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Navbar/Nav.jsx","components/Music/Music.jsx","components/Common/FormControls/TextError.jsx","components/Common/FormControls/FormikCheckbox.jsx","components/Common/FormControls/FormikDatePicker.jsx","components/Common/FormControls/FormikInput.jsx","components/Common/FormControls/FormikRadioButtons.jsx","components/Common/FormControls/FormikSelect.jsx","components/Common/FormControls/FormikTextArea.jsx","components/Common/FormControls/FormikControl.jsx","components/Settings/Settings.jsx","assets/networkLogo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Users/Paginator/PageButton.jsx","components/Users/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersInnerContainer.jsx","components/Login/LoginForm.jsx","hoc/WithSuspense.js","components/Settings/SettingsContainer.jsx","App.js","index.js","components/Users/User/User.module.css","assets/loaderSVG.svg","components/Common/Preloader/Preloader.jsx","redux/selectors.js","redux/profileReducer.js","components/Users/Paginator/PageButton.module.css","components/Header/Header.module.css"],"names":["module","exports","LoggedInRedirect","Component","RedirectedComponent","props","this","isLoggedIn","confirmation","to","isFetching","React","connect","state","authReducer","LoggedInTogglegAC","LoggedInFetchingAC","logOut","POST_NEW_TEXT","initialState","dialogsData","messagesData","dialogsReducer","action","type","newDialog","id","name","newPostItem","message","postText","postNewTextActionCreator","instance","axios","create","withCredentials","baseURL","headers","getUsers","pageSize","pageCount","get","then","res","data","getUserProfile","userId","getUserStatus","sendUserPhoto","file","formData","FormData","append","put","sendUserProfileSettings","settings","sendUserStatus","status","follow","post","unFollow","delete","logInProfile","loginMe","email","password","rememberMe","logOutMe","getCaptcha","SET_USER_DATA","LOGGED_IN_TOGGLE","LOGGED_IN_FETCHING","CAPTCHA","login","captchaImg","setUserDataAC","logInUserThunkCreator","dispatch","a","resultCode","getCaptchaThunk","url","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friends","friendsReducer","stateCopy","FOLLOW","UNFOLLOW","SET_USERS","PAGE_SIZE","TOGGLE_PRELOADER","TOGGLE_FOLLOWING_PROGRESS","PAGE_COUNT","TOTAL_COUNT","users","totalCount","followingProgress","followAC","unfollowAC","setUsersAC","pageCountAC","toggleFollowingProgressAC","INITIALIZED_SUCCSESS","initialized","reducers","combineReducers","profileReducer","usersReducer","map","user","followed","filter","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Nav","className","classes","nav","item","activeClassName","active","Music","contentColor","TextError","error","children","FormikCheckbox","options","label","rest","field","option","Fragment","htmlFor","value","key","checked","includes","component","FormikDatePicker","formControl","form","setFieldValue","selected","onChange","val","Input","FormikInput","touchedEmail","touchedPassword","alert","FormikRadioButtons","FormikSelect","as","FormikTextArea","FormikControl","control","Settings","profile","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","radioOptions","initialValues","onSubmit","values","returnedData","sendProfileSettings","formik","Header","header","logo","alt","src","onClick","HeaderContainer","PageButton","switchPage","removeUsers","button","checkedButton","Paginator","useState","initialPage","setInitialPage","numberOfShowedButtons","decrementNumber","setDecrementNumber","incrementNumber","numberOfPageButtons","Math","ceil","buttons","buttonsInitializeArray","i","push","createButtonsArray","buttonsContainer","User","photo","unFollowThunkCreator","followThunkCreator","logoBlock","defaultAvatar","disabled","some","infoBlock","country","city","Users","photos","small","UsersInnerContainer","getUsersThunkCreator","removeUsersThunkCreator","length","addPageSize","pageSizeAC","setUsers","addUsers","Preloader","getUsersSuper","usersSelectors","getPageSize","getPageCount","getTotalCount","getIsFetching","getFollowingProgrress","items","validationSchema","Yup","required","touched","isValid","WithSuspense","Suspense","fallback","SettingsContainer","getUserProfileThunkCreator","removeUserProfileThunkCreator","updateUserProfileSettings","Dialogs","lazy","ProfileContainer","App","initializeApp","path","render","exact","AppWithRouter","withRouter","promise","Promise","all","MainApp","basename","process","rerenderEntireTree","ReactDOM","document","getElementById","preloaderContainer","preloader","getAllUsers","getAllUsersSelector","createSelector","postsSelectors","getPosts","posts","getProfile","getNewPostsText","newPostText","getLogin","SET_USER_PROFILE","APDATE_USER_STATUS","ADD_NEW_POST","UPDATE_POST_TEXT","DELETE_POST","UPDATE_USER_PHOTO","userStatus","setUserProfile","updateUserStatusAC","addNewPostAC","UserId","getUserStatusThunkCreator","updateUserStatusThunkCreator","uploadUserProfilePhotoThunkCreator","addNewPostThunkCreator","newPost","userAva","userName","likesCount","postId"],"mappings":"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","file":"static/js/main.08e938e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__2qmHb\",\"preloader\":\"Preloader_preloader__3nzjs\"};","export default __webpack_public_path__ + \"static/media/defaultAvatar.0334f4b4.png\";","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from 'react-redux'\r\nimport { LoggedInTogglegAC, LoggedInFetchingAC, logOut } from '../redux/authReducer'\r\n\r\nexport const LoggedInRedirect = (Component) => {\r\n    class RedirectedComponent extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n            this.props = props\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                 {!this.props.isLoggedIn && this.props.confirmation ? <Redirect to='/Login' /> : <></>}\r\n                 {this.props.isFetching && !this.props.isLoggedIn ? <></> : <Component {...this.props} />}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsLoggedInRedirect = (state) => ({\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        isFetching: state.authReducer.isFetching,\r\n        confirmation: state.authReducer.confirmation,\r\n    })\r\n    let LogInRedirectComponent = connect(mapStateToPropsLoggedInRedirect, {LoggedInTogglegAC, LoggedInFetchingAC, logOut})(RedirectedComponent)\r\n    return LogInRedirectComponent\r\n}\r\n\r\n","const POST_NEW_TEXT = 'POST_NEW_TEXT'\r\n\r\nlet initialState = {\r\n    dialogsData: [],\r\n    messagesData: [],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case POST_NEW_TEXT:\r\n            let newDialog = {\r\n                id: 4,\r\n                name: 'Tema'\r\n            }\r\n            let newPostItem = {\r\n                id: 4,\r\n                message: action.postText,\r\n            }\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newDialog],\r\n                messagesData: [...state.messagesData, newPostItem],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postNewTextActionCreator = (postText) => {\r\n    return {\r\n        type: POST_NEW_TEXT,\r\n        postText: postText\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Music_contentColor__3tC_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Users_contentColor__2Kips\",\"addUsersButtonContainer\":\"Users_addUsersButtonContainer__3tC_O\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-Key': '0956be17-9287-4aaa-8ddc-9d18425e88b9',\r\n    }\r\n})\r\n\r\nexport const getUsers = (pageSize, pageCount) => {\r\n    return instance.get('users?page=' + pageCount + '&count=' + pageSize, {}).then(res => res.data)\r\n} // Получаем с сервера объект с пользователями (50 пользователей за раз)\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return instance.get('profile/' + userId, {})\r\n} // Получаем с сервера профиль пользователя согласно id выбранного пользователя\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return instance.get('profile/status/' + userId, {})\r\n} // Получаем с сервера статус профиля пользователя\r\n\r\nexport const sendUserPhoto = (file) => {\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    return instance.put('profile/photo/', formData, { \r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n     })\r\n}\r\n\r\nexport const sendUserProfileSettings = (settings) => {\r\n    return instance.put('profile', settings)\r\n}\r\n\r\nexport const sendUserStatus = (status) => {\r\n    return instance.put('profile/status/', { status: status })\r\n} // Отправляем на сервер новый статус пользователя\r\n\r\nexport const follow = (userId) => {\r\n    return instance.post('follow/' + userId, {}, {})\r\n} // Отправляем запрос на подписку на пользователя\r\n\r\nexport const unFollow = (userId) => {\r\n    return instance.delete('follow/' + userId, {}, {})\r\n} // Отправляем запрос на отписку от пользвателя\r\n\r\nexport const logInProfile = () => {\r\n    return instance.get('auth/me')\r\n} // Отпраялем запрос на проверку верификации профиля\r\n\r\nexport const loginMe = (email, password, rememberMe = false) => {\r\n    return instance.post('auth/login', { email, password, rememberMe })\r\n} // Ллогинимся в приложение\r\n\r\nexport const logOutMe = () => {\r\n    return instance.delete('auth/login')\r\n} // Выходим из приложения\r\n\r\nexport const getCaptcha = () => {\r\n    return instance.get('security/get-captcha-url')\r\n} // Отправляем запрос на капчу","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentColor\":\"Settings_contentColor__1LY4c\"};","import { loginMe, logInProfile, getCaptcha, logOutMe } from '../API/api'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst LOGGED_IN_TOGGLE = 'LOGGED_IN_TOGGLE'\r\nconst LOGGED_IN_FETCHING = 'LOGGED_IN_FETCHING'\r\nconst CAPTCHA = 'CAPTCHA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    confirmation: false,\r\n    captchaImg: '',\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,//Деструктуризация\r\n            }\r\n        case LOGGED_IN_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        case LOGGED_IN_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n                confirmation: action.confirmation\r\n            }\r\n        case CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaImg: action.captchaImg\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataAC = (userId, email, login, isLoggedIn) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { userId, email, login, isLoggedIn: isLoggedIn },\r\n    }\r\n}\r\n\r\nexport const LoggedInTogglegAC = (isLoggedIn) => {\r\n    return {\r\n        type: LOGGED_IN_TOGGLE,\r\n        isLoggedIn: isLoggedIn\r\n    }\r\n}\r\n\r\nexport const LoggedInFetchingAC = (isFetching, confirmation) => {\r\n    return {\r\n        type: LOGGED_IN_FETCHING,\r\n        isFetching: isFetching,\r\n        confirmation: confirmation\r\n    }\r\n}\r\n\r\nexport const captcha = (captchaImg) => ({\r\n    type: CAPTCHA,\r\n    captchaImg: captchaImg\r\n})\r\n\r\nexport const logInUserThunkCreator = () => async (dispatch) => {\r\n    dispatch(LoggedInFetchingAC(true, false))\r\n    const res = await logInProfile()\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data\r\n        dispatch(setUserDataAC(id, email, login, true))\r\n    }\r\n    dispatch(LoggedInFetchingAC(false, true))\r\n}\r\n\r\nexport const login = (email, password, rememberMe) =>\r\n    async (dispatch) => {\r\n        const res = await loginMe(email, password, rememberMe)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(logInUserThunkCreator())\r\n        }\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaThunk())\r\n        }\r\n    }\r\n\r\n\r\nexport const logOut = () =>\r\n    async (dispatch) => {\r\n        const res = await logOutMe()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserDataAC(null, null, null, false))\r\n        }\r\n    }\r\n\r\n\r\nexport const getCaptchaThunk = () =>\r\n    async (dispatch) => {\r\n        const res = await getCaptcha()\r\n        dispatch(captcha(res.data.url))\r\n        console.log(res)\r\n    }\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3jRL3\",\"item\":\"Nav_item__3Mn2D\",\"active\":\"Nav_active__10tEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3P2GR\",\"formControl\":\"Login_formControl__2h8Kz\",\"alert\":\"Login_alert__3TE9q\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    friends: [\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state}\r\n    return stateCopy\r\n}\r\nexport default friendsReducer","import { follow, unFollow, getUsers } from '../API/api'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst PAGE_SIZE = 'PAGE_SIZE'\r\nconst TOGGLE_PRELOADER = 'TOGGLE_PRELOADER'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\nconst PAGE_COUNT = 'PAGE_COUNT'\r\nconst TOTAL_COUNT = 'TOTAL_COUNT'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    pageCount: 1,\r\n    totalCount: null,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case PAGE_SIZE:\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        case PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.pageCount\r\n            }\r\n        case TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.followingProgress ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\r\n\r\nexport const pageSizeAC = (pageSize) => ({ type: PAGE_SIZE, pageSize })\r\n\r\nexport const pageCountAC = (pageCount) => ({ type: PAGE_COUNT, pageCount })\r\n\r\nexport const totalCountAR = (totalCount) => ({ type: TOTAL_COUNT, totalCount })\r\n\r\nexport const togglePreloaderAC = (isFetching) => ({ type: TOGGLE_PRELOADER, isFetching })\r\n\r\nexport const toggleFollowingProgressAC = (followingProgress, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, followingProgress, userId })\r\n\r\nexport const getUsersThunkCreator = (pageSize, pageCount) =>\r\n    async (dispatch) => {\r\n        dispatch(pageCountAC(pageCount))\r\n        const res = await getUsers(pageSize, pageCount)\r\n        dispatch(setUsersAC(res.items))\r\n        dispatch(totalCountAR(res.totalCount))\r\n    }\r\n\r\n\r\nexport const removeUsersThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUsersAC([]))\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId) =>\r\n\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await follow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(followAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\nexport const unFollowThunkCreator = (userId) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await unFollow(userId)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(unfollowAC(userId))\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userId))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { logInUserThunkCreator } from \"./authReducer\"\r\n\r\nconst INITIALIZED_SUCCSESS = 'INITIALIZED_SUCCSESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCSESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccsess = () => ({type: INITIALIZED_SUCCSESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(logInUserThunkCreator())\r\n   Promise.all([promise]).then(() => {\r\n    dispatch(initializeSuccsess())\r\n   })\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport { dialogsReducer } from './dialogsReducer'\r\nimport { friendsReducer } from './friendsReducer'\r\nimport {usersReducer} from './usersReducer'\r\nimport {authReducer} from './authReducer'\r\nimport {appReducer} from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    friendsReducer,\r\n    usersReducer,\r\n    authReducer,\r\n    appReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport classes from './Nav.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Nav = function (props) {\r\n  \r\n  return (\r\n    \r\n    <div className={classes.nav}>\r\n      \r\n      <nav >\r\n        <div className={classes.item}>\r\n          <NavLink to='/Profile/' activeClassName={classes.active}>My Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Dialogs' activeClassName={classes.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Users' activeClassName={classes.active}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Music' activeClassName={classes.active}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to='/Settings' activeClassName={classes.active}>Settings</NavLink>\r\n        </div>\r\n      </nav>\r\n        \r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Nav ","import React from 'react'\r\nimport classes from './Music.module.css'\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={classes.contentColor}>\r\n            <h1>\r\n                Music\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react' \r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={classes.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react' \r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikCheckbox = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <div>\r\n                                    <label htmlFor={option.value}>{option.key}</label>\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value.includes(option.value)} />\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikCheckbox","import React from 'react'\r\nimport DateView from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikDatePicker = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({ form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        return <DateView\r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)} />\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikDatePicker","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst Input = (props) => {\r\n    return <div className={classes.formControl}>\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <div>\r\n            <Field className={props.className} id={props.name} name={props.name} type={props.type} />\r\n            <ErrorMessage name={props.name} component={TextError} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst FormikInput = (props) => {\r\n\r\n    const { \r\n        label,\r\n        name,\r\n        email,\r\n        password,\r\n        touchedEmail,\r\n        touchedPassword,\r\n        type,\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            {touchedEmail && !email || touchedPassword && !password ?\r\n                <Input className={classes.alert} name={name} label={label} type={type} /> :\r\n                <Input className={null} name={name} label={label} type={type} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormikInput","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nconst FormikRadioButtons = (props) => {\r\n    const { name, label, options, ...rest } = props\r\n    return (\r\n        <div >\r\n            <label htmlFor={name}>{label}</label>\r\n            <div></div>\r\n            <Field name={name} {...rest}>\r\n                {\r\n                    ({ field }) => {\r\n                        console.log('field',field)\r\n                        return options.map(option => {\r\n                            return (\r\n                                <React.Fragment key={option.key}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id={option.value}\r\n                                        {...field}\r\n                                        value={option.value}\r\n                                        checked={field.value === option.value} />\r\n                                        <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikRadioButtons","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikSelect = (props) => {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='select' id={name} name={name} {...rest}>\r\n                {\r\n                    options.map(option => {\r\n                        return <option key={option.value} value={option.value}>\r\n                            {option.key}\r\n                        </option>\r\n                    })\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikSelect","import React from 'react' \r\nimport { Field, ErrorMessage} from 'formik'\r\nimport TextError from './TextError'\r\nimport classes from './Login.module.css'\r\n\r\nconst FormikTextArea = (props) => {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='textarea' id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormikTextArea","import React from 'react'\r\nimport FormikCheckbox from './FormikCheckbox'\r\nimport FormikDatePicker from './FormikDatePicker'\r\nimport FormikInput from './FormikInput'\r\nimport FormikRadioButtons from './FormikRadioButtons'\r\nimport FormikSelect from './FormikSelect'\r\nimport FormikTextArea from './FormikTextArea'\r\n\r\nconst FormikControl = (props) => {\r\n    const { control, ...rest } = props\r\n    switch (control) {\r\n        case 'input': return <FormikInput {...rest} />\r\n        case 'textarea': return <FormikTextArea {...rest} />\r\n        case 'select': return <FormikSelect {...rest} />\r\n        case 'radio': return <FormikRadioButtons {...rest} />\r\n        case 'checkbox': return <FormikCheckbox {...rest} /> \r\n        case 'date': return <FormikDatePicker {...rest} />\r\n        default: return null\r\n    }\r\n}\r\n\r\nexport default FormikControl","import React, { useState } from 'react'\r\nimport classes from './Settings.module.css'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport FormikControl from '../Common/FormControls/FormikControl'\r\nimport { sendUserProfileSettings } from '../../API/api'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    const { fullName, aboutMe, lookingForAJob, lookingForAJobDescription } = props.profile\r\n    const { facebook, github, instagram, mainLink, twitter, vk, website, youtube } = props.profile.contacts\r\n    \r\n    const radioOptions = [\r\n        { key: 'Looking for a job', value: 'true' }\r\n    ]\r\n\r\n    const initialValues = {\r\n        fullName: fullName,\r\n        aboutMe: aboutMe,\r\n        lookingForAJob: radioOptions,\r\n        lookingForAJobDescription: lookingForAJobDescription,\r\n        contacts: {\r\n            github: github,\r\n            vk: vk,\r\n            facebook: facebook,\r\n            instagram: instagram,\r\n            twitter: twitter,\r\n            website: website,\r\n            youtube: youtube,\r\n            mainLink: mainLink,\r\n        },\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        const returnedData = { ...values, lookingForAJob: !!values.lookingForAJob[1] }\r\n        props.sendProfileSettings(returnedData)\r\n        console.log(returnedData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n                {\r\n                    formik => {\r\n                        return <Form>\r\n                            <h1>Profile settings</h1>\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Full Name'\r\n                                name='fullName'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='About me'\r\n                                name='aboutMe'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='My skills'\r\n                                name='lookingForAJobDescription'\r\n                            />\r\n                            <FormikControl\r\n                                control='checkbox'\r\n                                name='lookingForAJob'\r\n                                options={radioOptions} />\r\n                           \r\n                            <h3>\r\n                                Contacts\r\n                            </h3>\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Github'\r\n                                name='contacts.github'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='vk'\r\n                                name='contacts.vk'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Facebook'\r\n                                name='contacts.facebook'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Instagram'\r\n                                name='contacts.instagram'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Twitter'\r\n                                name='contacts.twitter'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Website'\r\n                                name='contacts.website'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Youtube'\r\n                                name='contacts.youtube'\r\n                            />\r\n                            <FormikControl\r\n                                control='input'\r\n                                label='Main link'\r\n                                name='contacts.mainLink'\r\n                            />\r\n                             <button>Save</button>\r\n                        </Form>\r\n                    }\r\n                }\r\n            </Formik>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings","export default __webpack_public_path__ + \"static/media/networkLogo.e95a8eba.png\";","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport logo from '../../assets/networkLogo.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logOut()\r\n    }\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>\r\n                <img alt='TestNetworkLogo' src={logo} />\r\n            </div>\r\n            <div className={classes.login}>\r\n\r\n                {props.isLoggedIn ?\r\n                    <div>\r\n                        <div><span>{props.login}</span></div>\r\n                        <div><button onClick={logout}>Log out</button></div>\r\n                    </div>\r\n                    : <NavLink to='/Login'> <button>Login</button></NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport { logOut } from '../../redux/authReducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.authReducer.isLoggedIn,\r\n    login: state.authReducer.login,\r\n    isFetching: state.authReducer.isFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, {logOut})(HeaderContainer) ","import React from 'react'\r\nimport classes from './PageButton.module.css'\r\n\r\n\r\nconst PageButton = (props) => {\r\n    const switchPage = () => {\r\n        props.removeUsers()\r\n        props.getUsers(props.pageSize, props.button)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.button === props.pageCount\r\n                ? <div>\r\n                    <button className={classes.checkedButton} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n                : <div>\r\n                    <button key={props.button} onClick={switchPage}>{props.button}</button>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PageButton","import React, { useState } from 'react'\r\nimport PageButton from './PageButton'\r\nimport classes from './PageButton.module.css'\r\n\r\nconst Paginator = (props) => {\r\n\r\n    const buttonsPortion = 5\r\n    let touchedDecrementButton = false\r\n    const [initialPage, setInitialPage] = useState(props.pageCount)\r\n    const [numberOfShowedButtons] = useState(7)\r\n    const [decrementNumber, setDecrementNumber] = useState(buttonsPortion)\r\n    const [incrementNumber, setIncrementNumber] = useState(buttonsPortion)\r\n    const numberOfPageButtons = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n\r\n    const incrementInitialPage = () => {\r\n        setInitialPage(initialPage + incrementNumber)\r\n    }\r\n\r\n    const decrementInitialPage = () => {\r\n        setInitialPage(initialPage - decrementNumber)\r\n        touchedDecrementButton = true\r\n        if (touchedDecrementButton && decrementNumber !== buttonsPortion) setDecrementNumber(buttonsPortion)\r\n\r\n    }\r\n\r\n    const createButtonsArray = () => {\r\n        let buttonsInitializeArray = []\r\n        for (let i = initialPage; i < numberOfPageButtons + 1; i++) {\r\n            buttonsInitializeArray.push(i)\r\n        }\r\n\r\n        if (initialPage === 1) {\r\n            return buttonsInitializeArray\r\n        }\r\n        else if (initialPage - decrementNumber < 0) {\r\n            setDecrementNumber((decrementNumber - 1) + (initialPage - decrementNumber))\r\n        }\r\n\r\n        return buttonsInitializeArray\r\n    }\r\n\r\n    let buttons = createButtonsArray().map(function (button) {\r\n        if (button > initialPage + numberOfShowedButtons - 1) {\r\n            return\r\n        }\r\n        return <PageButton\r\n            button={button}\r\n            pageSize={props.pageSize}\r\n            getUsers={props.getUsers}\r\n            pageCount={props.pageCount}\r\n            totalCount={props.totalCount}\r\n            removeUsers={props.removeUsers}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className={classes.buttonsContainer}>\r\n            {initialPage === 1\r\n                ? null\r\n                : <div>\r\n                    <button onClick={decrementInitialPage}>назад</button>\r\n                </div>}\r\n            {buttons}\r\n            {numberOfPageButtons - incrementNumber <= initialPage\r\n                ? null\r\n                : <div>\r\n                    <button onClick={incrementInitialPage}>Вперед</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport classes from './User.module.css'\r\nimport defaultAvatar from '../../../assets/defaultAvatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    const {\r\n        id,\r\n        photo,\r\n        followed,\r\n        followingProgress,\r\n        unFollowThunkCreator,\r\n        followThunkCreator,\r\n        name,\r\n        status\r\n    } = props\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div className={classes.logoBlock}>\r\n                <div>\r\n                    <NavLink to={'/Users/' + id} >\r\n                        <img src={photo == null ? defaultAvatar : photo} alt=\"UserPhoto\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {followed\r\n                        ? <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            unFollowThunkCreator(id)\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingProgress.some(userId => userId === id)} onClick={() => {\r\n                            followThunkCreator(id)\r\n                        }}>Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={classes.infoBlock}>\r\n                <div className={classes.name}>{name}</div>\r\n                <div className={classes.status}>{status}</div>\r\n                <div className={classes.country}>Belarus<i>(hardcode)</i>,</div>\r\n                <div className={classes.city}>Bralaw<i>(hardcode)</i></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport Paginator from './Paginator/Paginator'\r\nimport User from './User/User'\r\nimport classes from './Users.module.css'\r\n\r\nconst Users = (props) => {\r\n    let users = props.users.map(user => <User\r\n        key={user.id}\r\n        id={user.id}\r\n        name={user.name}\r\n        status={user.status}\r\n        photo={user.photos.small}\r\n        followed={user.followed}\r\n        followingProgress={props.followingProgress}\r\n        followThunkCreator={props.followThunkCreator}\r\n        unFollowThunkCreator={props.unFollowThunkCreator}\r\n    />)\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            <div>\r\n                {users}\r\n            </div>\r\n            <Paginator\r\n                pageSize={props.pageSize}\r\n                totalCount={props.totalCount}\r\n                getUsers={props.getUsers}\r\n                pageCount={props.pageCount}\r\n                removeUsers={props.removeUsers}\r\n                />\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    pageSizeAC,\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unFollowThunkCreator,\r\n    removeUsersThunkCreator,\r\n    pageCountAC\r\n    \r\n} from '../../redux/usersReducer'\r\nimport { compose } from 'redux';\r\nimport { LoggedInRedirect } from '../../hoc/LoggedInRedirect'\r\nimport {\r\n    getUsersSuper,\r\n    usersSelectors\r\n} from '../../redux/selectors'\r\n\r\nclass UsersInnerContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.pageSize, this.props.pageCount)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeUsersThunkCreator() \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.users.length) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <>\r\n                <Users\r\n                    users={this.props.users}\r\n                    addPageSize={this.props.pageSizeAC}\r\n                    pageSize={this.props.pageSize}\r\n                    totalCount={this.props.totalCount}\r\n                    setUsers={this.props.setUsers}\r\n                    addUsers={this.addUsers}\r\n                    followingProgress={this.props.followingProgress}\r\n                    followThunkCreator={this.props.followThunkCreator}\r\n                    unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                    getUsers={this.props.getUsersThunkCreator}\r\n                    removeUsers={this.props.removeUsersThunkCreator}\r\n                    pageCount={this.props.pageCount}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: usersSelectors.getPageSize(state),\r\n        pageCount: usersSelectors.getPageCount(state),\r\n        totalCount: usersSelectors.getTotalCount(state),\r\n        isFetching: usersSelectors.getIsFetching(state),\r\n        followingProgress: usersSelectors.getFollowingProgrress(state),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        pageSizeAC,\r\n        getUsersThunkCreator,\r\n        removeUsersThunkCreator,\r\n        followThunkCreator,\r\n        unFollowThunkCreator,\r\n        pageCountAC,\r\n    }),\r\n    LoggedInRedirect\r\n)(UsersInnerContainer) ","import React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from '../Common/FormControls/FormikControl'\r\nimport { login } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const {login, isLoggedIn, captchaImg} = props\r\n\r\n    const radioOptions = [\r\n        { key: 'Remember me', value: 'rememerMe' }\r\n    ]\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: radioOptions,\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Enter email'),\r\n        password: Yup.string().required('Enter password')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        login( values.email, values.password, false)\r\n    }\r\n\r\n    if (isLoggedIn) { return <Redirect to={'/Profile'} /> } // Проверяем, если мы залогинены, то редиректим на профиль\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return <Form>\r\n                        <h1>Login</h1>\r\n                        <FormikControl\r\n                            email={formik.values.email}\r\n                            touchedEmail={formik.touched.email}\r\n                            control='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            name='email' />\r\n                        <FormikControl\r\n                            password={formik.values.password}\r\n                            touchedPassword={formik.touched.password}\r\n                            control='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            name='password' />\r\n                        <FormikControl\r\n                            control='checkbox'\r\n                            label='Remember me'\r\n                            name='rememberMe'\r\n                            options={radioOptions} />\r\n                        <p></p>\r\n                        <button type='submit' disabled={!formik.isValid}>Login</button>\r\n                        {!captchaImg ?\r\n                            null\r\n                            : <div>\r\n                                <p></p>\r\n                                <img src={captchaImg} alt=\"captcha\" />\r\n                            </div>\r\n                        }\r\n                    </Form>\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\nexport let mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.authReducer.isLoggedIn,\r\n        captchaImg: state.authReducer.captchaImg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(LoginForm)","import React from 'react'\r\nimport Preloader from '../components/Common/Preloader/Preloader'\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </React.Suspense> \r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { updateUserProfileSettings, getUserProfileThunkCreator, removeUserProfileThunkCreator } from '../../redux/profileReducer'\r\nimport { connect } from \"react-redux\";\r\nimport Settings from './Settings';\r\n\r\n\r\nclass SettingsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUserProfileThunkCreator(this.props.userId)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeUserProfileThunkCreator()\r\n    }\r\n    render() {\r\n        return <>\r\n            {\r\n                !this.props.profile\r\n                    ? null\r\n                    : <Settings\r\n                        sendProfileSettings={this.props.updateUserProfileSettings}\r\n                        profile={this.props.profile}\r\n                    />\r\n            }\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    userId: state.authReducer.userId\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateUserProfileSettings, getUserProfileThunkCreator, removeUserProfileThunkCreator })(SettingsContainer) ","import React from 'react'\nimport './App.css'\nimport { Route, withRouter, HashRouter } from 'react-router-dom';\nimport { connect, Provider } from 'react-redux'\nimport { initializeApp } from './redux/appReducer'\nimport { compose } from 'redux';\nimport store from './redux/reduxStore'\nimport Nav from './components/Navbar/Nav';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport UsersInnerContainer from './components/Users/UsersInnerContainer';\nimport LoginForm from './components/Login/LoginForm';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { WithSuspense } from './hoc/WithSuspense';\nimport SettingsContainer from './components/Settings/SettingsContainer';\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\nconst ProfileContainer = React.lazy(() => import('./components/NewProfile/ProfileContainer'))\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <>\n        <div className='app-wrapper'>\n          <HeaderContainer />\n          <Nav />\n          <div className='app-wrapper-content'>\n            <Route path='/Dialogs' render={WithSuspense(Dialogs)}/>\n            <Route path='/Profile/:userId?' render={WithSuspense(ProfileContainer)}/>\n            <Route path='/Users/:userId' render={WithSuspense(ProfileContainer)} />\n            <Route exact path='/Users' render={() => <UsersInnerContainer />} />\n            <Route path='/Music' render={() => <Music />} />\n            <Route path='/Settings' render={() => <SettingsContainer />} />\n            <Route path='/Login' render={() => <LoginForm />} />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized\n})\n\nlet AppWithRouter = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nlet MainApp = (props) => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppWithRouter />\n    </Provider>\n  </HashRouter>\n}\n\nexport default MainApp\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n \n\nexport let rerenderEntireTree = () => {\n  ReactDOM.render( <MainApp />,\n    document.getElementById('root')\n  );\n}\nrerenderEntireTree(store)\nwindow.store = store\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3Kdvq\",\"logoBlock\":\"User_logoBlock__xhS7H\",\"infoBlock\":\"User_infoBlock__3O4VD\",\"name\":\"User_name__3sCD6\",\"status\":\"User_status__1ssRJ\",\"city\":\"User_city__1xMuO\",\"country\":\"User_country__1_5tH\"};","export default __webpack_public_path__ + \"static/media/loaderSVG.2997ce57.svg\";","import React from 'react'\r\nimport preloader from '../../../assets/loaderSVG.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.preloaderContainer}>\r\n            <img className={classes.preloader} src={preloader} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import { createSelector } from 'reselect'\r\n\r\nexport const usersSelectors = {\r\n    getAllUsers(state) {\r\n        return state.usersReducer.users\r\n    },\r\n    getPageSize(state) {\r\n        return state.usersReducer.pageSize \r\n    },\r\n    getPageCount(state) {\r\n        return state.usersReducer.pageCount\r\n    },\r\n    getTotalCount(state) {\r\n        return state.usersReducer.totalCount\r\n    },\r\n    getIsFetching(state) {\r\n        return state.usersReducer.isFetching \r\n    },\r\n    getFollowingProgrress(state) {\r\n        return state.usersReducer.followingProgress\r\n    },\r\n    getAllUsersSelector(state) {\r\n        return this.getAllUsers(state).filter(user => true) \r\n    },\r\n}\r\n\r\nexport const getUsersSuper = createSelector(usersSelectors.getAllUsers, (users) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const postsSelectors = {\r\n    getPosts(state) {\r\n        return state.profileReducer.posts\r\n    },\r\n    getProfile(state) {\r\n        return state.profileReducer.profile\r\n    },\r\n    getNewPostsText(state) {\r\n        return state.profileReducer.newPostText\r\n    },\r\n    getLogin(state) {\r\n        return state.authReducer.login\r\n    }\r\n}\r\n\r\n","import { getUserProfile, getUserStatus, sendUserStatus, sendUserPhoto, sendUserProfileSettings } from '../API/api'\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst APDATE_USER_STATUS = 'APDATE_USER_STATUS'\r\nconst ADD_NEW_POST = 'ADD_NEW_POST'\r\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst UPDATE_USER_PHOTO = 'UPDATE_USER_PHOTO'\r\n\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    newPostText: '',\r\n    profile: null,\r\n    userStatus: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case APDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            }\r\n        }\r\n        case UPDATE_USER_PHOTO: {\r\n           return { ...state, profile: {...state.profile, photos: action.photos} }\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                id: 1,\r\n                postText: action.postText,\r\n                userAva: null,\r\n                userName: action.login,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const updateUserStatusAC = (userStatus) => ({ type: APDATE_USER_STATUS, userStatus: userStatus })\r\n\r\nexport const updateUserPhotoAC = (photos) => ({ type: UPDATE_USER_PHOTO, photos })\r\n\r\nexport const addNewPostAC = (postText, login) => ({ type: ADD_NEW_POST, postText, login })\r\n\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const updatePostText = (postText) => ({ type: UPDATE_POST_TEXT, postText: postText })\r\n\r\n\r\nexport const getUserProfileThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserProfile(UserId)\r\n        dispatch(setUserProfile(res.data))\r\n    }\r\n// Делаем запрос на сервер за данными пользователя, и диспатчим данные в стор\r\n\r\nexport const removeUserProfileThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setUserProfile(null))\r\n    }\r\n} // Удаляем из стора загруженный профиль\r\n\r\nexport const getUserStatusThunkCreator = (UserId) =>\r\n    async (dispatch) => {\r\n        const res = await getUserStatus(UserId)\r\n        dispatch(updateUserStatusAC(res.data))\r\n    }\r\n// Делаем запрос на сервер и диспатчим статус пользователя\r\n\r\nexport const updateUserStatusThunkCreator = (status) =>\r\n    async (dispatch) => {\r\n        const res = await sendUserStatus(status)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(updateUserStatusAC(status))\r\n        }\r\n    }\r\n\r\nexport const updateUserProfileSettings = (settings) => \r\n    async (dispatch) => {\r\n        const res = await sendUserProfileSettings(settings)\r\n        if (res.data.resultCode === 0) {\r\n            console.log('upDated!')\r\n        }\r\n        else {\r\n            console.log('Error!')\r\n        }\r\n    } \r\n        \r\n\r\nexport const uploadUserProfilePhotoThunkCreator = (file) =>\r\n    async (dispatch) => {\r\n        const res = await sendUserPhoto(file)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(updateUserPhotoAC(res.data.data.photos))\r\n        }\r\n    }\r\n\r\nexport const addNewPostThunkCreator = (postText, login) => (dispatch) => {\r\n    dispatch(addNewPostAC(postText, login))\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"PageButton_buttonsContainer__135jv\",\"checkedButton\":\"PageButton_checkedButton__2t6J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eA5PG\",\"logo\":\"Header_logo__30lpE\",\"login\":\"Header_login__2clXM\"};"],"sourceRoot":""}